2023-11-10 17:34:06 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:06 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:06 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:06 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:34:06 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:06 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1405528",
        "sql": ""
    }
}
2023-11-10 17:34:06 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:34:07 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:34:15 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=c1c9ewkku07meoadufr7fzzlr15msjg6; expires=Fri, 24-Nov-2023 09:34:15 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f1febc7e7fe1225e2202e18a9bf1dd88cb5cb668"
}
cookies: [{'name': 'sessionid', 'value': 'c1c9ewkku07meoadufr7fzzlr15msjg6'}]
cost: 2112ms
cookie: <RequestsCookieJar[<Cookie sessionid=c1c9ewkku07meoadufr7fzzlr15msjg6 for 124.70.221.221/>]>
2023-11-10 17:34:07 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:34:07 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:34:07 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:07 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:07 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:07 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:34:07 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:07 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1664517",
        "sql": ""
    }
}
2023-11-10 17:34:07 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:34:07 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:34:16 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=1yspe9y78khczyncdcenmt43f15mvpxc; expires=Fri, 24-Nov-2023 09:34:16 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '1yspe9y78khczyncdcenmt43f15mvpxc'}]
cost: 1969ms
cookie: <RequestsCookieJar[<Cookie sessionid=1yspe9y78khczyncdcenmt43f15mvpxc for 124.70.221.221/>]>
2023-11-10 17:34:07 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:34:07 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:34:07 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:07 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:07 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:07 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:34:07 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:07 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1661958",
        "sql": ""
    }
}
2023-11-10 17:34:07 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:34:07 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:34:16 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=8atssjva1abezmd1v2a31bl719clj8ct; expires=Fri, 24-Nov-2023 09:34:16 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "b826c79b593113e7d0c8fb26aa2c5acbc362b645"
}
cookies: [{'name': 'sessionid', 'value': '8atssjva1abezmd1v2a31bl719clj8ct'}]
cost: 2280ms
cookie: <RequestsCookieJar[<Cookie sessionid=8atssjva1abezmd1v2a31bl719clj8ct for 124.70.221.221/>]>
2023-11-10 17:34:07 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:34:07 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:34:07 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:07 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:07 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:07 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:34:07 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:07 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1375700",
        "sql": ""
    }
}
2023-11-10 17:34:07 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:34:07 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:34:16 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=z2ylax5lti1vz6fiwpg0bar1yyykwz23; expires=Fri, 24-Nov-2023 09:34:16 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'z2ylax5lti1vz6fiwpg0bar1yyykwz23'}]
cost: 1940ms
cookie: <RequestsCookieJar[<Cookie sessionid=z2ylax5lti1vz6fiwpg0bar1yyykwz23 for 124.70.221.221/>]>
2023-11-10 17:34:07 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:34:07 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:34:07 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:07 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:07 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:07 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:34:07 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:07 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1606766",
        "sql": ""
    }
}
2023-11-10 17:34:07 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:34:07 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:34:16 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ntuufhghemsva4xws1kwvh1xymk8gbm4; expires=Fri, 24-Nov-2023 09:34:16 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f51d32d9f9d755b394af843218ff5b70f7c2471f"
}
cookies: [{'name': 'sessionid', 'value': 'ntuufhghemsva4xws1kwvh1xymk8gbm4'}]
cost: 2215ms
cookie: <RequestsCookieJar[<Cookie sessionid=ntuufhghemsva4xws1kwvh1xymk8gbm4 for 124.70.221.221/>]>
2023-11-10 17:34:07 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:34:07 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:34:07 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:07 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:07 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:07 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:34:07 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:07 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1740211",
        "sql": ""
    }
}
2023-11-10 17:34:07 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:34:08 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:34:16 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=sw5dy9delb96gs1zynvrjoy94u3a8a0y; expires=Fri, 24-Nov-2023 09:34:16 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'sw5dy9delb96gs1zynvrjoy94u3a8a0y'}]
cost: 2124ms
cookie: <RequestsCookieJar[<Cookie sessionid=sw5dy9delb96gs1zynvrjoy94u3a8a0y for 124.70.221.221/>]>
2023-11-10 17:34:08 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:34:08 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:34:08 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:34:08 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:34:08 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:34:08 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:34:08 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:34:08 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1693571",
        "sql": ""
    }
}
2023-11-10 17:34:08 [INFO]: f--------  执行前置条件 ----------
func1
