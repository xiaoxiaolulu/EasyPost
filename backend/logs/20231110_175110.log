2023-11-10 17:51:13 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:13 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:13 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:13 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:13 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:13 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1325109",
        "sql": ""
    }
}
2023-11-10 17:51:13 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:13 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:22 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=jqbi7xe0l9oyh37s8f5q76x6efw8jl6l; expires=Fri, 24-Nov-2023 09:51:22 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "02bbe2d0d9c82c9392f12df3aecc4a8b5f8bb166"
}
cookies: [{'name': 'sessionid', 'value': 'jqbi7xe0l9oyh37s8f5q76x6efw8jl6l'}]
cost: 3070ms
cookie: <RequestsCookieJar[<Cookie sessionid=jqbi7xe0l9oyh37s8f5q76x6efw8jl6l for 124.70.221.221/>]>
2023-11-10 17:51:13 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:13 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:13 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:13 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:13 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:13 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:13 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:13 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1002120",
        "sql": ""
    }
}
2023-11-10 17:51:13 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:14 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:22 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=au9cx47bem3iqbi7ptqdyvsgl539wpvx; expires=Fri, 24-Nov-2023 09:51:22 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'au9cx47bem3iqbi7ptqdyvsgl539wpvx'}]
cost: 3484ms
cookie: <RequestsCookieJar[<Cookie sessionid=au9cx47bem3iqbi7ptqdyvsgl539wpvx for 124.70.221.221/>]>
2023-11-10 17:51:14 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:14 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:14 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:14 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:14 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:14 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:14 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:14 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1895307",
        "sql": ""
    }
}
2023-11-10 17:51:14 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:14 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:23 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ms7vygo3npjl5ou86ewcb1u3ip0amm8g; expires=Fri, 24-Nov-2023 09:51:23 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a5dadcaa61f54edd138312943c188a65977eedbf"
}
cookies: [{'name': 'sessionid', 'value': 'ms7vygo3npjl5ou86ewcb1u3ip0amm8g'}]
cost: 2320ms
cookie: <RequestsCookieJar[<Cookie sessionid=ms7vygo3npjl5ou86ewcb1u3ip0amm8g for 124.70.221.221/>]>
2023-11-10 17:51:14 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:14 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:14 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:14 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:14 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:14 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:14 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:14 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1896604",
        "sql": ""
    }
}
2023-11-10 17:51:14 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:14 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:23 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=9m4obuojeb73md92jqrg7z50l6beza8e; expires=Fri, 24-Nov-2023 09:51:23 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '9m4obuojeb73md92jqrg7z50l6beza8e'}]
cost: 1941ms
cookie: <RequestsCookieJar[<Cookie sessionid=9m4obuojeb73md92jqrg7z50l6beza8e for 124.70.221.221/>]>
2023-11-10 17:51:14 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:14 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:14 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:14 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:14 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:14 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:14 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:14 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1307219",
        "sql": ""
    }
}
2023-11-10 17:51:14 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:14 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:23 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=hkclbph64p6vyqn0ne8zi5g0a9pcbswx; expires=Fri, 24-Nov-2023 09:51:23 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "59ff5be187ff6d104cdab18511eb546807b19d3c"
}
cookies: [{'name': 'sessionid', 'value': 'hkclbph64p6vyqn0ne8zi5g0a9pcbswx'}]
cost: 2278ms
cookie: <RequestsCookieJar[<Cookie sessionid=hkclbph64p6vyqn0ne8zi5g0a9pcbswx for 124.70.221.221/>]>
2023-11-10 17:51:14 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:14 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:14 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:14 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:14 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:14 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:14 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:14 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1876688",
        "sql": ""
    }
}
2023-11-10 17:51:14 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:15 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:23 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=gebx4uupnmr7y3wm38z556j0l4e8n5kz; expires=Fri, 24-Nov-2023 09:51:23 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'gebx4uupnmr7y3wm38z556j0l4e8n5kz'}]
cost: 1897ms
cookie: <RequestsCookieJar[<Cookie sessionid=gebx4uupnmr7y3wm38z556j0l4e8n5kz for 124.70.221.221/>]>
2023-11-10 17:51:15 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:15 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:15 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:15 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:15 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:15 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:15 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:15 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1818736",
        "sql": ""
    }
}
2023-11-10 17:51:15 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:15 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:24 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=maq533q7eflw8343xu0uw983vbrq1wej; expires=Fri, 24-Nov-2023 09:51:24 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "ad8e1de7334c2c4ea50351c4d9250638ec3ea912"
}
cookies: [{'name': 'sessionid', 'value': 'maq533q7eflw8343xu0uw983vbrq1wej'}]
cost: 2108ms
cookie: <RequestsCookieJar[<Cookie sessionid=maq533q7eflw8343xu0uw983vbrq1wej for 124.70.221.221/>]>
2023-11-10 17:51:15 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:15 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:15 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:15 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:15 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:15 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:15 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:15 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1066533",
        "sql": ""
    }
}
2023-11-10 17:51:15 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:15 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:24 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=e2r7z6dcf9thcosg63w9qaqyyhx550bg; expires=Fri, 24-Nov-2023 09:51:24 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'e2r7z6dcf9thcosg63w9qaqyyhx550bg'}]
cost: 2126ms
cookie: <RequestsCookieJar[<Cookie sessionid=e2r7z6dcf9thcosg63w9qaqyyhx550bg for 124.70.221.221/>]>
2023-11-10 17:51:15 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:15 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:15 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:15 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:15 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:15 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:15 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:15 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1974150",
        "sql": ""
    }
}
2023-11-10 17:51:15 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:15 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:24 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=midjgkabc22pb6iqmlkei7mz0zksacan; expires=Fri, 24-Nov-2023 09:51:24 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "34f10b778331dfab745b8949e3adfa43d7aaacba"
}
cookies: [{'name': 'sessionid', 'value': 'midjgkabc22pb6iqmlkei7mz0zksacan'}]
cost: 2432ms
cookie: <RequestsCookieJar[<Cookie sessionid=midjgkabc22pb6iqmlkei7mz0zksacan for 124.70.221.221/>]>
2023-11-10 17:51:15 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:15 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:15 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:15 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:15 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:15 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:15 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:15 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1682536",
        "sql": ""
    }
}
2023-11-10 17:51:15 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:16 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:24 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=b2fqm37uxv4u6kbyxqxgsln46ukv0hvm; expires=Fri, 24-Nov-2023 09:51:24 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'b2fqm37uxv4u6kbyxqxgsln46ukv0hvm'}]
cost: 2224ms
cookie: <RequestsCookieJar[<Cookie sessionid=b2fqm37uxv4u6kbyxqxgsln46ukv0hvm for 124.70.221.221/>]>
2023-11-10 17:51:16 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:16 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:16 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:16 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:16 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:16 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:16 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:16 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1106446",
        "sql": ""
    }
}
2023-11-10 17:51:16 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:16 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:25 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=5sugtb0hednl9hzr1q9kcvdmqa30wyqe; expires=Fri, 24-Nov-2023 09:51:24 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "7db921720e1664d45121059f4693692379976257"
}
cookies: [{'name': 'sessionid', 'value': '5sugtb0hednl9hzr1q9kcvdmqa30wyqe'}]
cost: 2184ms
cookie: <RequestsCookieJar[<Cookie sessionid=5sugtb0hednl9hzr1q9kcvdmqa30wyqe for 124.70.221.221/>]>
2023-11-10 17:51:16 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:16 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:16 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:16 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:16 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:16 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:16 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:16 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1472776",
        "sql": ""
    }
}
2023-11-10 17:51:16 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:16 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:25 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=p1c0i9pro3enng6u6bpnsmcv1sufyytu; expires=Fri, 24-Nov-2023 09:51:25 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'p1c0i9pro3enng6u6bpnsmcv1sufyytu'}]
cost: 1876ms
cookie: <RequestsCookieJar[<Cookie sessionid=p1c0i9pro3enng6u6bpnsmcv1sufyytu for 124.70.221.221/>]>
2023-11-10 17:51:16 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:16 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:16 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:16 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:16 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:16 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:16 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:16 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1073906",
        "sql": ""
    }
}
2023-11-10 17:51:16 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:16 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:25 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=bgkkie5q0hpsaoe66nk3gf82ul1pfoxc; expires=Fri, 24-Nov-2023 09:51:25 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "ec03e5f56e7e9cb695005101d23d0365ae0ac85e"
}
cookies: [{'name': 'sessionid', 'value': 'bgkkie5q0hpsaoe66nk3gf82ul1pfoxc'}]
cost: 2372ms
cookie: <RequestsCookieJar[<Cookie sessionid=bgkkie5q0hpsaoe66nk3gf82ul1pfoxc for 124.70.221.221/>]>
2023-11-10 17:51:16 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:16 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:16 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:16 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:16 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:16 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:16 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:16 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1115443",
        "sql": ""
    }
}
2023-11-10 17:51:16 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:16 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:25 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ksc06z1p36ifew9qd00hnl64vn0xlw8d; expires=Fri, 24-Nov-2023 09:51:25 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'ksc06z1p36ifew9qd00hnl64vn0xlw8d'}]
cost: 1969ms
cookie: <RequestsCookieJar[<Cookie sessionid=ksc06z1p36ifew9qd00hnl64vn0xlw8d for 124.70.221.221/>]>
2023-11-10 17:51:16 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:16 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:16 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:16 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:16 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:16 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:16 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:16 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1937345",
        "sql": ""
    }
}
2023-11-10 17:51:16 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:17 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:25 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=igma0v23k1gf6w1in4o87zk2mxj3ggow; expires=Fri, 24-Nov-2023 09:51:25 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "0d490a74f072fc83f10ee8d7cf585017628beacf"
}
cookies: [{'name': 'sessionid', 'value': 'igma0v23k1gf6w1in4o87zk2mxj3ggow'}]
cost: 2113ms
cookie: <RequestsCookieJar[<Cookie sessionid=igma0v23k1gf6w1in4o87zk2mxj3ggow for 124.70.221.221/>]>
2023-11-10 17:51:17 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:17 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:17 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:17 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:17 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:17 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:17 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:17 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1664357",
        "sql": ""
    }
}
2023-11-10 17:51:17 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:17 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:26 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=3110fxzzk6ulr0niz0cj2gxuhmmjzio1; expires=Fri, 24-Nov-2023 09:51:26 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '3110fxzzk6ulr0niz0cj2gxuhmmjzio1'}]
cost: 2371ms
cookie: <RequestsCookieJar[<Cookie sessionid=3110fxzzk6ulr0niz0cj2gxuhmmjzio1 for 124.70.221.221/>]>
2023-11-10 17:51:17 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:17 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:17 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:17 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:17 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:17 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:17 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:17 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1350934",
        "sql": ""
    }
}
2023-11-10 17:51:17 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:17 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:26 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=l9jq35g717e7nimo44kt030v2ewnp7ld; expires=Fri, 24-Nov-2023 09:51:26 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "4f335b52a85ce116a8f3588df0bc0c9be6cc3586"
}
cookies: [{'name': 'sessionid', 'value': 'l9jq35g717e7nimo44kt030v2ewnp7ld'}]
cost: 2514ms
cookie: <RequestsCookieJar[<Cookie sessionid=l9jq35g717e7nimo44kt030v2ewnp7ld for 124.70.221.221/>]>
2023-11-10 17:51:17 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:17 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:17 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:17 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:17 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:17 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:17 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:17 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1995359",
        "sql": ""
    }
}
2023-11-10 17:51:17 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:17 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:26 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=rov5cb5tyax11bumkf40ffp1ungcsj5q; expires=Fri, 24-Nov-2023 09:51:26 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'rov5cb5tyax11bumkf40ffp1ungcsj5q'}]
cost: 1997ms
cookie: <RequestsCookieJar[<Cookie sessionid=rov5cb5tyax11bumkf40ffp1ungcsj5q for 124.70.221.221/>]>
2023-11-10 17:51:17 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:17 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:17 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:17 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:17 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:17 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:17 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:17 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1276929",
        "sql": ""
    }
}
2023-11-10 17:51:17 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:17 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:26 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=8lf0e86ei971tw5momgibh30w41sx81t; expires=Fri, 24-Nov-2023 09:51:26 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "de5591e6c6e5ca560c30f953b64e55c3cd46929d"
}
cookies: [{'name': 'sessionid', 'value': '8lf0e86ei971tw5momgibh30w41sx81t'}]
cost: 2091ms
cookie: <RequestsCookieJar[<Cookie sessionid=8lf0e86ei971tw5momgibh30w41sx81t for 124.70.221.221/>]>
2023-11-10 17:51:17 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:17 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:17 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:17 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:17 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:17 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:17 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:17 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1798372",
        "sql": ""
    }
}
2023-11-10 17:51:17 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:18 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:26 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ja7bpxuh66fcy1h6pw4joso78hjals8t; expires=Fri, 24-Nov-2023 09:51:26 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'ja7bpxuh66fcy1h6pw4joso78hjals8t'}]
cost: 2022ms
cookie: <RequestsCookieJar[<Cookie sessionid=ja7bpxuh66fcy1h6pw4joso78hjals8t for 124.70.221.221/>]>
2023-11-10 17:51:18 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:18 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:18 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:18 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:18 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:18 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:18 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:18 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1848582",
        "sql": ""
    }
}
2023-11-10 17:51:18 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:18 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:27 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=gz54jadinjv4grb68m8dhsv6q3wqanyh; expires=Fri, 24-Nov-2023 09:51:27 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "c181dbcc6a633af18b92e83e774e25ce25569a13"
}
cookies: [{'name': 'sessionid', 'value': 'gz54jadinjv4grb68m8dhsv6q3wqanyh'}]
cost: 2439ms
cookie: <RequestsCookieJar[<Cookie sessionid=gz54jadinjv4grb68m8dhsv6q3wqanyh for 124.70.221.221/>]>
2023-11-10 17:51:18 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:18 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:18 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:18 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:18 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:18 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:18 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:18 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1388088",
        "sql": ""
    }
}
2023-11-10 17:51:18 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:18 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:27 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=nawsle9nxl0ojlqghkrsbvodsm5yv4vb; expires=Fri, 24-Nov-2023 09:51:27 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'nawsle9nxl0ojlqghkrsbvodsm5yv4vb'}]
cost: 2052ms
cookie: <RequestsCookieJar[<Cookie sessionid=nawsle9nxl0ojlqghkrsbvodsm5yv4vb for 124.70.221.221/>]>
2023-11-10 17:51:18 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:18 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:18 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:18 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:18 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:18 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:18 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:18 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1823765",
        "sql": ""
    }
}
2023-11-10 17:51:18 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:18 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:27 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=3vgoyotxcpg6x4zp0hg6xi4zcdba4r0v; expires=Fri, 24-Nov-2023 09:51:27 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "b269f785ba6fd777e9b2f0d628cb0a1d83d43753"
}
cookies: [{'name': 'sessionid', 'value': '3vgoyotxcpg6x4zp0hg6xi4zcdba4r0v'}]
cost: 2162ms
cookie: <RequestsCookieJar[<Cookie sessionid=3vgoyotxcpg6x4zp0hg6xi4zcdba4r0v for 124.70.221.221/>]>
2023-11-10 17:51:18 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:18 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:18 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:18 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:18 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:18 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:18 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:18 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1814969",
        "sql": ""
    }
}
2023-11-10 17:51:18 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:19 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:27 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=x4otdn26m3ax6udsyrkeroxb48rjxlvl; expires=Fri, 24-Nov-2023 09:51:27 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'x4otdn26m3ax6udsyrkeroxb48rjxlvl'}]
cost: 2073ms
cookie: <RequestsCookieJar[<Cookie sessionid=x4otdn26m3ax6udsyrkeroxb48rjxlvl for 124.70.221.221/>]>
2023-11-10 17:51:19 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:19 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:19 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:19 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:19 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:19 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:19 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:19 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1062884",
        "sql": ""
    }
}
2023-11-10 17:51:19 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:19 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:28 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=jqn00av1q4n7a5i2inb561ebjxt0ml3u; expires=Fri, 24-Nov-2023 09:51:28 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "348624a41841d7e9aedbba722521d0360c5110dd"
}
cookies: [{'name': 'sessionid', 'value': 'jqn00av1q4n7a5i2inb561ebjxt0ml3u'}]
cost: 2369ms
cookie: <RequestsCookieJar[<Cookie sessionid=jqn00av1q4n7a5i2inb561ebjxt0ml3u for 124.70.221.221/>]>
2023-11-10 17:51:19 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:19 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:19 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:19 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:19 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:19 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:19 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:19 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1794138",
        "sql": ""
    }
}
2023-11-10 17:51:19 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:19 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:28 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=4dg3qsmzu5nnbk4tu62awuv8nqyfbo5u; expires=Fri, 24-Nov-2023 09:51:28 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '4dg3qsmzu5nnbk4tu62awuv8nqyfbo5u'}]
cost: 2128ms
cookie: <RequestsCookieJar[<Cookie sessionid=4dg3qsmzu5nnbk4tu62awuv8nqyfbo5u for 124.70.221.221/>]>
2023-11-10 17:51:19 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:19 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:19 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:19 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:19 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:19 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:19 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:19 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1475861",
        "sql": ""
    }
}
2023-11-10 17:51:19 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:19 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:28 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ic1kffyd24eqkhxdb9qzmwe5mby1zfng; expires=Fri, 24-Nov-2023 09:51:28 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "befe23d76b078462c292042d2f4e46fee11f9e80"
}
cookies: [{'name': 'sessionid', 'value': 'ic1kffyd24eqkhxdb9qzmwe5mby1zfng'}]
cost: 2326ms
cookie: <RequestsCookieJar[<Cookie sessionid=ic1kffyd24eqkhxdb9qzmwe5mby1zfng for 124.70.221.221/>]>
2023-11-10 17:51:19 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:19 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:19 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:19 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:19 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:19 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:19 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:19 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1370019",
        "sql": ""
    }
}
2023-11-10 17:51:19 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:19 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:28 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=l6xbxqkxlsmp99e7l4gnmnnehriv3m64; expires=Fri, 24-Nov-2023 09:51:28 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'l6xbxqkxlsmp99e7l4gnmnnehriv3m64'}]
cost: 2117ms
cookie: <RequestsCookieJar[<Cookie sessionid=l6xbxqkxlsmp99e7l4gnmnnehriv3m64 for 124.70.221.221/>]>
2023-11-10 17:51:19 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:19 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:19 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:19 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:19 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:19 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:19 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:19 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1307801",
        "sql": ""
    }
}
2023-11-10 17:51:19 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:20 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:28 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=on9q5szq9a2svc882q2b8ufnyuj3jwvi; expires=Fri, 24-Nov-2023 09:51:28 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "ed4c7982f38c7e218d6be80643dced84eb6fa78d"
}
cookies: [{'name': 'sessionid', 'value': 'on9q5szq9a2svc882q2b8ufnyuj3jwvi'}]
cost: 2204ms
cookie: <RequestsCookieJar[<Cookie sessionid=on9q5szq9a2svc882q2b8ufnyuj3jwvi for 124.70.221.221/>]>
2023-11-10 17:51:20 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:20 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:20 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:20 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:20 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:20 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:20 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:20 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1813328",
        "sql": ""
    }
}
2023-11-10 17:51:20 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:20 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:29 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=dwka1z2s881dkm97l9bslkztztzjy6c3; expires=Fri, 24-Nov-2023 09:51:29 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'dwka1z2s881dkm97l9bslkztztzjy6c3'}]
cost: 2013ms
cookie: <RequestsCookieJar[<Cookie sessionid=dwka1z2s881dkm97l9bslkztztzjy6c3 for 124.70.221.221/>]>
2023-11-10 17:51:20 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:20 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:20 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:20 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:20 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:20 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:20 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:20 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1689011",
        "sql": ""
    }
}
2023-11-10 17:51:20 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:20 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:29 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ocld7hn35jvzpurc39cqt3kdlt9z6ao3; expires=Fri, 24-Nov-2023 09:51:29 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "e0697a06a8f32a1f9544f17021801b09cdb75b93"
}
cookies: [{'name': 'sessionid', 'value': 'ocld7hn35jvzpurc39cqt3kdlt9z6ao3'}]
cost: 2453ms
cookie: <RequestsCookieJar[<Cookie sessionid=ocld7hn35jvzpurc39cqt3kdlt9z6ao3 for 124.70.221.221/>]>
2023-11-10 17:51:20 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:20 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:20 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:20 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:20 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:20 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:20 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:20 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1606722",
        "sql": ""
    }
}
2023-11-10 17:51:20 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:20 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:29 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=fyjh06rglezwxmu6vb3v9xh2p4u9kh65; expires=Fri, 24-Nov-2023 09:51:29 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'fyjh06rglezwxmu6vb3v9xh2p4u9kh65'}]
cost: 2270ms
cookie: <RequestsCookieJar[<Cookie sessionid=fyjh06rglezwxmu6vb3v9xh2p4u9kh65 for 124.70.221.221/>]>
2023-11-10 17:51:20 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:20 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:20 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:20 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:20 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:20 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:20 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:20 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1892216",
        "sql": ""
    }
}
2023-11-10 17:51:20 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:21 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:29 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=m514ijzwurns3t7skblyip7bgd5f7ibo; expires=Fri, 24-Nov-2023 09:51:29 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "05808552fd375041e73fd3d3c6096cfa46bdf179"
}
cookies: [{'name': 'sessionid', 'value': 'm514ijzwurns3t7skblyip7bgd5f7ibo'}]
cost: 2348ms
cookie: <RequestsCookieJar[<Cookie sessionid=m514ijzwurns3t7skblyip7bgd5f7ibo for 124.70.221.221/>]>
2023-11-10 17:51:21 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:21 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:21 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:21 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:21 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:21 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:21 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:21 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1510273",
        "sql": ""
    }
}
2023-11-10 17:51:21 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:21 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:30 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=t7pv1abbeeizsw0zwpmf0hlxirsynwtd; expires=Fri, 24-Nov-2023 09:51:30 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 't7pv1abbeeizsw0zwpmf0hlxirsynwtd'}]
cost: 2120ms
cookie: <RequestsCookieJar[<Cookie sessionid=t7pv1abbeeizsw0zwpmf0hlxirsynwtd for 124.70.221.221/>]>
2023-11-10 17:51:21 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:21 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:21 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:21 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:21 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:21 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:21 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:21 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1006760",
        "sql": ""
    }
}
2023-11-10 17:51:21 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:21 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:30 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ajpgpaup2m84qo5o44aupgmsln7lum31; expires=Fri, 24-Nov-2023 09:51:30 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "9535da5b6e5bdfed9156da43d935fd2832e0d4d4"
}
cookies: [{'name': 'sessionid', 'value': 'ajpgpaup2m84qo5o44aupgmsln7lum31'}]
cost: 3545ms
cookie: <RequestsCookieJar[<Cookie sessionid=ajpgpaup2m84qo5o44aupgmsln7lum31 for 124.70.221.221/>]>
2023-11-10 17:51:21 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:21 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:21 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:21 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:21 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:21 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:21 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:21 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1715397",
        "sql": ""
    }
}
2023-11-10 17:51:21 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:21 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:30 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=jv50kkatm5rfj8age5r0c4n9dd359u3h; expires=Fri, 24-Nov-2023 09:51:30 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'jv50kkatm5rfj8age5r0c4n9dd359u3h'}]
cost: 2081ms
cookie: <RequestsCookieJar[<Cookie sessionid=jv50kkatm5rfj8age5r0c4n9dd359u3h for 124.70.221.221/>]>
2023-11-10 17:51:21 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:21 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:21 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:21 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:21 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:21 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:21 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:21 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1632681",
        "sql": ""
    }
}
2023-11-10 17:51:21 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:22 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:30 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=qtz44q2ofmknfzdbiicbp99r9140p4jc; expires=Fri, 24-Nov-2023 09:51:30 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "0c17d27e012caed9972151ca1b0ea4038913f3de"
}
cookies: [{'name': 'sessionid', 'value': 'qtz44q2ofmknfzdbiicbp99r9140p4jc'}]
cost: 2157ms
cookie: <RequestsCookieJar[<Cookie sessionid=qtz44q2ofmknfzdbiicbp99r9140p4jc for 124.70.221.221/>]>
2023-11-10 17:51:22 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:22 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:22 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:22 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:22 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:22 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:22 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:22 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1155078",
        "sql": ""
    }
}
2023-11-10 17:51:22 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:22 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:31 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=1ne72xfss9c82qzoblx7pwbglkprhvu1; expires=Fri, 24-Nov-2023 09:51:31 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '1ne72xfss9c82qzoblx7pwbglkprhvu1'}]
cost: 3027ms
cookie: <RequestsCookieJar[<Cookie sessionid=1ne72xfss9c82qzoblx7pwbglkprhvu1 for 124.70.221.221/>]>
2023-11-10 17:51:22 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:22 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:22 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:22 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:22 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:22 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:22 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:22 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1720412",
        "sql": ""
    }
}
2023-11-10 17:51:22 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:22 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:31 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=6y554oy4egrj1axqrp7dvxzag9mimjj2; expires=Fri, 24-Nov-2023 09:51:31 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "575301a0937e5c3aa29c0929f5cbf89ca562f7fb"
}
cookies: [{'name': 'sessionid', 'value': '6y554oy4egrj1axqrp7dvxzag9mimjj2'}]
cost: 2439ms
cookie: <RequestsCookieJar[<Cookie sessionid=6y554oy4egrj1axqrp7dvxzag9mimjj2 for 124.70.221.221/>]>
2023-11-10 17:51:22 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:22 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:22 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:22 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:22 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:22 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:22 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:22 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1181013",
        "sql": ""
    }
}
2023-11-10 17:51:22 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:22 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:31 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=hsgdigghrr4xplc7enrm9vgnyskxb6ih; expires=Fri, 24-Nov-2023 09:51:31 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'hsgdigghrr4xplc7enrm9vgnyskxb6ih'}]
cost: 2268ms
cookie: <RequestsCookieJar[<Cookie sessionid=hsgdigghrr4xplc7enrm9vgnyskxb6ih for 124.70.221.221/>]>
2023-11-10 17:51:22 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:22 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:22 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:22 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:22 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:22 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:22 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:22 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1109590",
        "sql": ""
    }
}
2023-11-10 17:51:22 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:23 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:31 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=6f5466hv9xeud0q2nf66b6wtvgznbqrk; expires=Fri, 24-Nov-2023 09:51:31 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "6f015591586a4790a2823c160c9185d07dd6802c"
}
cookies: [{'name': 'sessionid', 'value': '6f5466hv9xeud0q2nf66b6wtvgznbqrk'}]
cost: 2986ms
cookie: <RequestsCookieJar[<Cookie sessionid=6f5466hv9xeud0q2nf66b6wtvgznbqrk for 124.70.221.221/>]>
2023-11-10 17:51:23 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:23 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:23 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:23 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:23 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:23 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:23 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:23 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1518503",
        "sql": ""
    }
}
2023-11-10 17:51:23 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:23 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:32 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=jcfkpbum86de4tgdsuecpkzov2v20k93; expires=Fri, 24-Nov-2023 09:51:32 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'jcfkpbum86de4tgdsuecpkzov2v20k93'}]
cost: 3012ms
cookie: <RequestsCookieJar[<Cookie sessionid=jcfkpbum86de4tgdsuecpkzov2v20k93 for 124.70.221.221/>]>
2023-11-10 17:51:23 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:23 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:23 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:23 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:23 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:23 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:23 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:23 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1616951",
        "sql": ""
    }
}
2023-11-10 17:51:23 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:23 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:32 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=mipz11cbhfvvaz5t6vs2woc35u54wjnd; expires=Fri, 24-Nov-2023 09:51:32 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "d57447e32ab123bd297f3755d4ed0c1a63d8dd47"
}
cookies: [{'name': 'sessionid', 'value': 'mipz11cbhfvvaz5t6vs2woc35u54wjnd'}]
cost: 3421ms
cookie: <RequestsCookieJar[<Cookie sessionid=mipz11cbhfvvaz5t6vs2woc35u54wjnd for 124.70.221.221/>]>
2023-11-10 17:51:23 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:23 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:23 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:23 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:23 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:23 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:23 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:23 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1869590",
        "sql": ""
    }
}
2023-11-10 17:51:23 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:24 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:32 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=1yvu1xpoc8m491a3ab473smeum37v0bi; expires=Fri, 24-Nov-2023 09:51:32 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '1yvu1xpoc8m491a3ab473smeum37v0bi'}]
cost: 2015ms
cookie: <RequestsCookieJar[<Cookie sessionid=1yvu1xpoc8m491a3ab473smeum37v0bi for 124.70.221.221/>]>
2023-11-10 17:51:24 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:24 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:24 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:24 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:24 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:24 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:24 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:24 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1238068",
        "sql": ""
    }
}
2023-11-10 17:51:24 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:24 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:33 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=1waq3mngx6ox3era6n5lrhhqdi2ze27d; expires=Fri, 24-Nov-2023 09:51:33 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f8bf33cc79b88ecac3f1a23c465cc8ea7e817ce6"
}
cookies: [{'name': 'sessionid', 'value': '1waq3mngx6ox3era6n5lrhhqdi2ze27d'}]
cost: 2317ms
cookie: <RequestsCookieJar[<Cookie sessionid=1waq3mngx6ox3era6n5lrhhqdi2ze27d for 124.70.221.221/>]>
2023-11-10 17:51:24 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:24 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:24 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:24 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:24 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:24 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:24 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:24 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1433452",
        "sql": ""
    }
}
2023-11-10 17:51:24 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:24 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:33 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=818f8w7zwlhewupjq19xn6x1j66gs05d; expires=Fri, 24-Nov-2023 09:51:33 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '818f8w7zwlhewupjq19xn6x1j66gs05d'}]
cost: 1866ms
cookie: <RequestsCookieJar[<Cookie sessionid=818f8w7zwlhewupjq19xn6x1j66gs05d for 124.70.221.221/>]>
2023-11-10 17:51:24 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:24 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:24 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:24 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:24 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:24 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:24 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:24 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1400571",
        "sql": ""
    }
}
2023-11-10 17:51:24 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:24 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:33 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=nunel95tpywaikurjj463r46np0fn5xb; expires=Fri, 24-Nov-2023 09:51:33 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "b127aaa541db7cb3d53cb0160e115699e5059492"
}
cookies: [{'name': 'sessionid', 'value': 'nunel95tpywaikurjj463r46np0fn5xb'}]
cost: 2171ms
cookie: <RequestsCookieJar[<Cookie sessionid=nunel95tpywaikurjj463r46np0fn5xb for 124.70.221.221/>]>
2023-11-10 17:51:24 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:24 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:24 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:24 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:24 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:24 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:24 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:24 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1568669",
        "sql": ""
    }
}
2023-11-10 17:51:24 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:24 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:33 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=v3mv9qoweora04ava37fy2n1xlzvcmg7; expires=Fri, 24-Nov-2023 09:51:33 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'v3mv9qoweora04ava37fy2n1xlzvcmg7'}]
cost: 2065ms
cookie: <RequestsCookieJar[<Cookie sessionid=v3mv9qoweora04ava37fy2n1xlzvcmg7 for 124.70.221.221/>]>
2023-11-10 17:51:24 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:24 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:24 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:24 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:24 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:24 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:24 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:24 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1547497",
        "sql": ""
    }
}
2023-11-10 17:51:24 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:25 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:33 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=w6iews57ofac4dx0l090z6gnvtnv7jhu; expires=Fri, 24-Nov-2023 09:51:33 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "e7f93ebebce8cb34428937eb9dcfbedacacd9e67"
}
cookies: [{'name': 'sessionid', 'value': 'w6iews57ofac4dx0l090z6gnvtnv7jhu'}]
cost: 3785ms
cookie: <RequestsCookieJar[<Cookie sessionid=w6iews57ofac4dx0l090z6gnvtnv7jhu for 124.70.221.221/>]>
2023-11-10 17:51:25 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:25 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:25 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:25 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:25 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:25 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:25 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:25 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1693150",
        "sql": ""
    }
}
2023-11-10 17:51:25 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:25 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:34 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=lsi4d93rsb1d0jrogoc0v5oje1un6ysm; expires=Fri, 24-Nov-2023 09:51:34 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'lsi4d93rsb1d0jrogoc0v5oje1un6ysm'}]
cost: 2009ms
cookie: <RequestsCookieJar[<Cookie sessionid=lsi4d93rsb1d0jrogoc0v5oje1un6ysm for 124.70.221.221/>]>
2023-11-10 17:51:25 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:25 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:25 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:25 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:25 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:25 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:25 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:25 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1828941",
        "sql": ""
    }
}
2023-11-10 17:51:25 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:25 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:34 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=lsin96byzvrsn9ka8atqlud8fana1wc9; expires=Fri, 24-Nov-2023 09:51:34 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "99389429d62bcac0db78217bb2ad56bcd0e1248a"
}
cookies: [{'name': 'sessionid', 'value': 'lsin96byzvrsn9ka8atqlud8fana1wc9'}]
cost: 2245ms
cookie: <RequestsCookieJar[<Cookie sessionid=lsin96byzvrsn9ka8atqlud8fana1wc9 for 124.70.221.221/>]>
2023-11-10 17:51:25 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:25 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:25 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:25 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:25 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:25 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:25 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:25 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1342459",
        "sql": ""
    }
}
2023-11-10 17:51:25 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:25 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:34 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=r0rkhubr05xxprm9w8kmxxqjysxmt7wr; expires=Fri, 24-Nov-2023 09:51:34 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'r0rkhubr05xxprm9w8kmxxqjysxmt7wr'}]
cost: 1912ms
cookie: <RequestsCookieJar[<Cookie sessionid=r0rkhubr05xxprm9w8kmxxqjysxmt7wr for 124.70.221.221/>]>
2023-11-10 17:51:25 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:25 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:25 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:25 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:25 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:25 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:25 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:25 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1465855",
        "sql": ""
    }
}
2023-11-10 17:51:25 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:26 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:34 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=q92faxw7lqfgd1cz02gwhzzbk5f2wz2s; expires=Fri, 24-Nov-2023 09:51:34 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "e36c5fbc80b506357b252bc47ba4bfecc9b9fabf"
}
cookies: [{'name': 'sessionid', 'value': 'q92faxw7lqfgd1cz02gwhzzbk5f2wz2s'}]
cost: 2096ms
cookie: <RequestsCookieJar[<Cookie sessionid=q92faxw7lqfgd1cz02gwhzzbk5f2wz2s for 124.70.221.221/>]>
2023-11-10 17:51:26 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:26 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:26 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:26 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:26 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:26 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:26 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:26 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1984055",
        "sql": ""
    }
}
2023-11-10 17:51:26 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:26 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:35 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=76zvbqm1qo091chna8y14yjriexk8irr; expires=Fri, 24-Nov-2023 09:51:35 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '76zvbqm1qo091chna8y14yjriexk8irr'}]
cost: 1956ms
cookie: <RequestsCookieJar[<Cookie sessionid=76zvbqm1qo091chna8y14yjriexk8irr for 124.70.221.221/>]>
2023-11-10 17:51:26 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:26 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:26 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:26 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:26 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:26 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:26 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:26 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1932781",
        "sql": ""
    }
}
2023-11-10 17:51:26 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:26 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:35 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=r8gx4zel5ij3cjy9ez5hbjeddjbjdvp0; expires=Fri, 24-Nov-2023 09:51:35 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a41c6723034bc24f7c92edee81bd46abf5527c7b"
}
cookies: [{'name': 'sessionid', 'value': 'r8gx4zel5ij3cjy9ez5hbjeddjbjdvp0'}]
cost: 2296ms
cookie: <RequestsCookieJar[<Cookie sessionid=r8gx4zel5ij3cjy9ez5hbjeddjbjdvp0 for 124.70.221.221/>]>
2023-11-10 17:51:26 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:26 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:26 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:26 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:26 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:26 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:26 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:26 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1764134",
        "sql": ""
    }
}
2023-11-10 17:51:26 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:26 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:35 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=8ohhoact4r6n544riuq7n74w2v87b1qp; expires=Fri, 24-Nov-2023 09:51:35 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '8ohhoact4r6n544riuq7n74w2v87b1qp'}]
cost: 2107ms
cookie: <RequestsCookieJar[<Cookie sessionid=8ohhoact4r6n544riuq7n74w2v87b1qp for 124.70.221.221/>]>
2023-11-10 17:51:26 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:26 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:26 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:26 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:26 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:26 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:26 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:26 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1373191",
        "sql": ""
    }
}
2023-11-10 17:51:26 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:27 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:35 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=n5buqg9556t9hv3q9ul1g8hwr4s6n3ks; expires=Fri, 24-Nov-2023 09:51:35 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "56648618a833314eba748c90fc9cfc5ae4b16dfe"
}
cookies: [{'name': 'sessionid', 'value': 'n5buqg9556t9hv3q9ul1g8hwr4s6n3ks'}]
cost: 2397ms
cookie: <RequestsCookieJar[<Cookie sessionid=n5buqg9556t9hv3q9ul1g8hwr4s6n3ks for 124.70.221.221/>]>
2023-11-10 17:51:27 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:27 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:27 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:27 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:27 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:27 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:27 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:27 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1810752",
        "sql": ""
    }
}
2023-11-10 17:51:27 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:27 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:36 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=0zf4placf9528c17z90swjl7msio6e1n; expires=Fri, 24-Nov-2023 09:51:36 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '0zf4placf9528c17z90swjl7msio6e1n'}]
cost: 1906ms
cookie: <RequestsCookieJar[<Cookie sessionid=0zf4placf9528c17z90swjl7msio6e1n for 124.70.221.221/>]>
2023-11-10 17:51:27 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:27 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:27 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:27 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:27 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:27 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:27 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:27 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1311122",
        "sql": ""
    }
}
2023-11-10 17:51:27 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:27 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:36 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=hi789sk5lh0nto86vplc8u5yzkm2kq9v; expires=Fri, 24-Nov-2023 09:51:36 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "c51b98d0d84f070a848c4e596f63556d3353003b"
}
cookies: [{'name': 'sessionid', 'value': 'hi789sk5lh0nto86vplc8u5yzkm2kq9v'}]
cost: 2167ms
cookie: <RequestsCookieJar[<Cookie sessionid=hi789sk5lh0nto86vplc8u5yzkm2kq9v for 124.70.221.221/>]>
2023-11-10 17:51:27 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:27 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:27 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:27 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:27 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:27 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:27 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:27 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1215451",
        "sql": ""
    }
}
2023-11-10 17:51:27 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:27 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:36 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=rcztaw7x4ztg25mjiaauhik4bg0h5gjh; expires=Fri, 24-Nov-2023 09:51:36 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'rcztaw7x4ztg25mjiaauhik4bg0h5gjh'}]
cost: 1989ms
cookie: <RequestsCookieJar[<Cookie sessionid=rcztaw7x4ztg25mjiaauhik4bg0h5gjh for 124.70.221.221/>]>
2023-11-10 17:51:27 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:27 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:27 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:27 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:27 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:27 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:27 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:27 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1477900",
        "sql": ""
    }
}
2023-11-10 17:51:27 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:27 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:36 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=yrqaldwxnogkl6k9yn5p3qtk7w8ovznf; expires=Fri, 24-Nov-2023 09:51:36 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "31abb105e00f52d248d84d07a883641160c698d5"
}
cookies: [{'name': 'sessionid', 'value': 'yrqaldwxnogkl6k9yn5p3qtk7w8ovznf'}]
cost: 2559ms
cookie: <RequestsCookieJar[<Cookie sessionid=yrqaldwxnogkl6k9yn5p3qtk7w8ovznf for 124.70.221.221/>]>
2023-11-10 17:51:27 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:27 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:27 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:27 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:27 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:27 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:27 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:27 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1817398",
        "sql": ""
    }
}
2023-11-10 17:51:27 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:28 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:36 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=c1es4bc60fh3c9xx2bvagjvrpwn62xeo; expires=Fri, 24-Nov-2023 09:51:36 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'c1es4bc60fh3c9xx2bvagjvrpwn62xeo'}]
cost: 2066ms
cookie: <RequestsCookieJar[<Cookie sessionid=c1es4bc60fh3c9xx2bvagjvrpwn62xeo for 124.70.221.221/>]>
2023-11-10 17:51:28 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:28 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:28 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:28 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:28 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:28 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:28 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:28 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1175500",
        "sql": ""
    }
}
2023-11-10 17:51:28 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:28 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:37 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ht2phhfd6mygurnuytbg6i6cgpw6snhy; expires=Fri, 24-Nov-2023 09:51:37 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "c2ce12d133ad38f14c831a9fbd94c0959a323fa0"
}
cookies: [{'name': 'sessionid', 'value': 'ht2phhfd6mygurnuytbg6i6cgpw6snhy'}]
cost: 2471ms
cookie: <RequestsCookieJar[<Cookie sessionid=ht2phhfd6mygurnuytbg6i6cgpw6snhy for 124.70.221.221/>]>
2023-11-10 17:51:28 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:28 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:28 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:28 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:28 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:28 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:28 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:28 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1542618",
        "sql": ""
    }
}
2023-11-10 17:51:28 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:28 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:37 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=cmsmn3ip48eux8ynmoldwhdj80furhiy; expires=Fri, 24-Nov-2023 09:51:37 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'cmsmn3ip48eux8ynmoldwhdj80furhiy'}]
cost: 2104ms
cookie: <RequestsCookieJar[<Cookie sessionid=cmsmn3ip48eux8ynmoldwhdj80furhiy for 124.70.221.221/>]>
2023-11-10 17:51:28 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:28 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:28 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:28 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:28 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:28 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:28 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:28 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1638961",
        "sql": ""
    }
}
2023-11-10 17:51:28 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:28 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:37 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=aedsisain2lq4cg6ae8whddftjxv8dz4; expires=Fri, 24-Nov-2023 09:51:37 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "3e15edde3482bc44ee98407f26d8347dc111d5b2"
}
cookies: [{'name': 'sessionid', 'value': 'aedsisain2lq4cg6ae8whddftjxv8dz4'}]
cost: 2175ms
cookie: <RequestsCookieJar[<Cookie sessionid=aedsisain2lq4cg6ae8whddftjxv8dz4 for 124.70.221.221/>]>
2023-11-10 17:51:28 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:28 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:28 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:28 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:28 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:28 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:28 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:28 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1930979",
        "sql": ""
    }
}
2023-11-10 17:51:28 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:29 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:37 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=kuh8jiyo33y66sg5hu64sb1thzzfba1k; expires=Fri, 24-Nov-2023 09:51:37 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'kuh8jiyo33y66sg5hu64sb1thzzfba1k'}]
cost: 2306ms
cookie: <RequestsCookieJar[<Cookie sessionid=kuh8jiyo33y66sg5hu64sb1thzzfba1k for 124.70.221.221/>]>
2023-11-10 17:51:29 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:29 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:29 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:29 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:29 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:29 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:29 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:29 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1400505",
        "sql": ""
    }
}
2023-11-10 17:51:29 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:29 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:38 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=xrzrldeirove7lp0kphheguifonpwbyf; expires=Fri, 24-Nov-2023 09:51:38 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "45635e19ca940a8b53b7a670e9b78966525a9f5c"
}
cookies: [{'name': 'sessionid', 'value': 'xrzrldeirove7lp0kphheguifonpwbyf'}]
cost: 2402ms
cookie: <RequestsCookieJar[<Cookie sessionid=xrzrldeirove7lp0kphheguifonpwbyf for 124.70.221.221/>]>
2023-11-10 17:51:29 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:29 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:29 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:29 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:29 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:29 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:29 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:29 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1609270",
        "sql": ""
    }
}
2023-11-10 17:51:29 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:29 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:38 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=xfaaaopl8xm337jzb3x0l4a4fqgxyqds; expires=Fri, 24-Nov-2023 09:51:38 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'xfaaaopl8xm337jzb3x0l4a4fqgxyqds'}]
cost: 2106ms
cookie: <RequestsCookieJar[<Cookie sessionid=xfaaaopl8xm337jzb3x0l4a4fqgxyqds for 124.70.221.221/>]>
2023-11-10 17:51:29 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:29 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:29 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:29 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:29 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:29 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:29 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:29 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1844923",
        "sql": ""
    }
}
2023-11-10 17:51:29 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:29 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:38 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=f9bdmq744fqvmhdxt2memz1knjzvmpau; expires=Fri, 24-Nov-2023 09:51:38 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "63cc88a0449dfaa5eaa8dbab17495d5cc3d593eb"
}
cookies: [{'name': 'sessionid', 'value': 'f9bdmq744fqvmhdxt2memz1knjzvmpau'}]
cost: 3108ms
cookie: <RequestsCookieJar[<Cookie sessionid=f9bdmq744fqvmhdxt2memz1knjzvmpau for 124.70.221.221/>]>
2023-11-10 17:51:29 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:29 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:29 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:29 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:29 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:29 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:29 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:29 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1682372",
        "sql": ""
    }
}
2023-11-10 17:51:29 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:30 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:38 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=e21m7txo0opi5m3fzi8mfoowzquzpjb1; expires=Fri, 24-Nov-2023 09:51:38 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'e21m7txo0opi5m3fzi8mfoowzquzpjb1'}]
cost: 2261ms
cookie: <RequestsCookieJar[<Cookie sessionid=e21m7txo0opi5m3fzi8mfoowzquzpjb1 for 124.70.221.221/>]>
2023-11-10 17:51:30 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:30 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:30 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:30 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:30 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:30 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:30 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:30 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1264799",
        "sql": ""
    }
}
2023-11-10 17:51:30 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:30 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:39 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=io48udmjb1o0ekczmasr0gdtxz7ow46b; expires=Fri, 24-Nov-2023 09:51:39 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "51b31e8deabfd8c3084daa1927e00c6d296b7911"
}
cookies: [{'name': 'sessionid', 'value': 'io48udmjb1o0ekczmasr0gdtxz7ow46b'}]
cost: 2322ms
cookie: <RequestsCookieJar[<Cookie sessionid=io48udmjb1o0ekczmasr0gdtxz7ow46b for 124.70.221.221/>]>
2023-11-10 17:51:30 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:30 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:30 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:30 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:30 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:30 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:30 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:30 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1960548",
        "sql": ""
    }
}
2023-11-10 17:51:30 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:30 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:39 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=7rkm233h77t6439q0hyvf0esdgysvsve; expires=Fri, 24-Nov-2023 09:51:39 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '7rkm233h77t6439q0hyvf0esdgysvsve'}]
cost: 2187ms
cookie: <RequestsCookieJar[<Cookie sessionid=7rkm233h77t6439q0hyvf0esdgysvsve for 124.70.221.221/>]>
2023-11-10 17:51:30 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:30 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:30 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:30 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:30 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:30 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:30 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:30 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1044104",
        "sql": ""
    }
}
2023-11-10 17:51:30 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:30 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:39 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=x3g5w20zbhmz7yws3p8jspudjqd214pg; expires=Fri, 24-Nov-2023 09:51:39 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "6f825d0825d9e1f0274c2d6d3e159643eb6c3e4c"
}
cookies: [{'name': 'sessionid', 'value': 'x3g5w20zbhmz7yws3p8jspudjqd214pg'}]
cost: 2181ms
cookie: <RequestsCookieJar[<Cookie sessionid=x3g5w20zbhmz7yws3p8jspudjqd214pg for 124.70.221.221/>]>
2023-11-10 17:51:30 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:30 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:30 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:30 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:30 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:30 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:30 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:30 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1044181",
        "sql": ""
    }
}
2023-11-10 17:51:30 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:30 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:39 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=uuo0rm2j4oq5dqlph1xqorroglbmw1x3; expires=Fri, 24-Nov-2023 09:51:39 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'uuo0rm2j4oq5dqlph1xqorroglbmw1x3'}]
cost: 2109ms
cookie: <RequestsCookieJar[<Cookie sessionid=uuo0rm2j4oq5dqlph1xqorroglbmw1x3 for 124.70.221.221/>]>
2023-11-10 17:51:30 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:30 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:30 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:30 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:30 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:30 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:30 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:30 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1574349",
        "sql": ""
    }
}
2023-11-10 17:51:30 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:31 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:39 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=p2fhx52e7dsu1icxkzys56hptboym8a5; expires=Fri, 24-Nov-2023 09:51:39 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "bbd4c06e495e6f1f2500e28c376adf407494ad3a"
}
cookies: [{'name': 'sessionid', 'value': 'p2fhx52e7dsu1icxkzys56hptboym8a5'}]
cost: 2225ms
cookie: <RequestsCookieJar[<Cookie sessionid=p2fhx52e7dsu1icxkzys56hptboym8a5 for 124.70.221.221/>]>
2023-11-10 17:51:31 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:31 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:31 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:31 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:31 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:31 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:31 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:31 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1324124",
        "sql": ""
    }
}
2023-11-10 17:51:31 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:31 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:40 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=n1mr7fbnl5rvir2cyhfvo2y13exmk76g; expires=Fri, 24-Nov-2023 09:51:40 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'n1mr7fbnl5rvir2cyhfvo2y13exmk76g'}]
cost: 2006ms
cookie: <RequestsCookieJar[<Cookie sessionid=n1mr7fbnl5rvir2cyhfvo2y13exmk76g for 124.70.221.221/>]>
2023-11-10 17:51:31 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:31 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:31 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:31 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:31 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:31 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:31 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:31 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1056816",
        "sql": ""
    }
}
2023-11-10 17:51:31 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:31 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:40 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=mv02dwgzkad0qtx9iteoo0gini04mibu; expires=Fri, 24-Nov-2023 09:51:40 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f1a7c9d8dab232e612b10f63179e7a6627f68512"
}
cookies: [{'name': 'sessionid', 'value': 'mv02dwgzkad0qtx9iteoo0gini04mibu'}]
cost: 2137ms
cookie: <RequestsCookieJar[<Cookie sessionid=mv02dwgzkad0qtx9iteoo0gini04mibu for 124.70.221.221/>]>
2023-11-10 17:51:31 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:31 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:31 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:31 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:31 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:31 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:31 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:31 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1162856",
        "sql": ""
    }
}
2023-11-10 17:51:31 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:31 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:40 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=tzcqnkjbh3m8ylwqa1mugjxfbwm1f0hp; expires=Fri, 24-Nov-2023 09:51:40 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'tzcqnkjbh3m8ylwqa1mugjxfbwm1f0hp'}]
cost: 1906ms
cookie: <RequestsCookieJar[<Cookie sessionid=tzcqnkjbh3m8ylwqa1mugjxfbwm1f0hp for 124.70.221.221/>]>
2023-11-10 17:51:31 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:31 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:31 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:31 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:31 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:31 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:31 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:31 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1690003",
        "sql": ""
    }
}
2023-11-10 17:51:31 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:32 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:40 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=r27q3kcu0jstudtvc88lflg0jbygo59y; expires=Fri, 24-Nov-2023 09:51:40 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "9728c58cc7ebd4e7ea606c941e75342c1cd0672f"
}
cookies: [{'name': 'sessionid', 'value': 'r27q3kcu0jstudtvc88lflg0jbygo59y'}]
cost: 2374ms
cookie: <RequestsCookieJar[<Cookie sessionid=r27q3kcu0jstudtvc88lflg0jbygo59y for 124.70.221.221/>]>
2023-11-10 17:51:32 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:32 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:32 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:32 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:32 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:32 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:32 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:32 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1255070",
        "sql": ""
    }
}
2023-11-10 17:51:32 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:32 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:41 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=y85ata3k0u08nzhuro4zacdao9iewxeb; expires=Fri, 24-Nov-2023 09:51:40 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'y85ata3k0u08nzhuro4zacdao9iewxeb'}]
cost: 2342ms
cookie: <RequestsCookieJar[<Cookie sessionid=y85ata3k0u08nzhuro4zacdao9iewxeb for 124.70.221.221/>]>
2023-11-10 17:51:32 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:32 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:32 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:32 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:32 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:32 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:32 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:32 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1017154",
        "sql": ""
    }
}
2023-11-10 17:51:32 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:32 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:41 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=1191zpdyipu4ecl6enfpr9l9lbb492t1; expires=Fri, 24-Nov-2023 09:51:41 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "4b44441410fb991864f94eb74908b6428136cd59"
}
cookies: [{'name': 'sessionid', 'value': '1191zpdyipu4ecl6enfpr9l9lbb492t1'}]
cost: 2149ms
cookie: <RequestsCookieJar[<Cookie sessionid=1191zpdyipu4ecl6enfpr9l9lbb492t1 for 124.70.221.221/>]>
2023-11-10 17:51:32 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:32 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:32 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:32 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:32 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:32 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:32 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:32 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1493091",
        "sql": ""
    }
}
2023-11-10 17:51:32 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:32 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:41 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=sm1e8hyaume8gwzmzgojpaovdyhyju82; expires=Fri, 24-Nov-2023 09:51:41 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'sm1e8hyaume8gwzmzgojpaovdyhyju82'}]
cost: 2433ms
cookie: <RequestsCookieJar[<Cookie sessionid=sm1e8hyaume8gwzmzgojpaovdyhyju82 for 124.70.221.221/>]>
2023-11-10 17:51:32 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:32 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:32 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:32 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:32 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:32 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:32 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:32 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1366653",
        "sql": ""
    }
}
2023-11-10 17:51:32 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:32 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:41 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=xd0cttzdhquqp2yfw1aj5x4gwxnqj7cl; expires=Fri, 24-Nov-2023 09:51:41 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "76acbc7b3278d6832b38db28db3292934db5cabf"
}
cookies: [{'name': 'sessionid', 'value': 'xd0cttzdhquqp2yfw1aj5x4gwxnqj7cl'}]
cost: 2673ms
cookie: <RequestsCookieJar[<Cookie sessionid=xd0cttzdhquqp2yfw1aj5x4gwxnqj7cl for 124.70.221.221/>]>
2023-11-10 17:51:32 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:32 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:32 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:32 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:32 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:32 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:32 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:32 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1080138",
        "sql": ""
    }
}
2023-11-10 17:51:32 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:33 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:42 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=zdsllw2nukd1d1g8ayboce0v849mdodf; expires=Fri, 24-Nov-2023 09:51:42 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'zdsllw2nukd1d1g8ayboce0v849mdodf'}]
cost: 3632ms
cookie: <RequestsCookieJar[<Cookie sessionid=zdsllw2nukd1d1g8ayboce0v849mdodf for 124.70.221.221/>]>
2023-11-10 17:51:33 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:33 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:33 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:33 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:33 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:33 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:33 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:33 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1111862",
        "sql": ""
    }
}
2023-11-10 17:51:33 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:33 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:42 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=6bvcp6iovfq9uu40n10ugtw1w3aqvsp9; expires=Fri, 24-Nov-2023 09:51:42 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "9a685363e7897c146dc365edfedb37482479b8e6"
}
cookies: [{'name': 'sessionid', 'value': '6bvcp6iovfq9uu40n10ugtw1w3aqvsp9'}]
cost: 2775ms
cookie: <RequestsCookieJar[<Cookie sessionid=6bvcp6iovfq9uu40n10ugtw1w3aqvsp9 for 124.70.221.221/>]>
2023-11-10 17:51:33 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:33 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:33 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:33 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:33 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:33 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:33 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:33 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1550562",
        "sql": ""
    }
}
2023-11-10 17:51:33 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:33 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:42 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=14j3cimjg5v3vti5t3be72glnefdasw9; expires=Fri, 24-Nov-2023 09:51:42 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '14j3cimjg5v3vti5t3be72glnefdasw9'}]
cost: 2023ms
cookie: <RequestsCookieJar[<Cookie sessionid=14j3cimjg5v3vti5t3be72glnefdasw9 for 124.70.221.221/>]>
2023-11-10 17:51:33 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:33 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:33 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:33 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:33 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:33 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:33 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:33 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1884152",
        "sql": ""
    }
}
2023-11-10 17:51:33 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:34 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:42 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=c7szjv98874zcopc1wd1g2q6w4v7fcco; expires=Fri, 24-Nov-2023 09:51:42 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "e2ecfee763b8663bb61bca59b9e3ed0835e23fba"
}
cookies: [{'name': 'sessionid', 'value': 'c7szjv98874zcopc1wd1g2q6w4v7fcco'}]
cost: 2232ms
cookie: <RequestsCookieJar[<Cookie sessionid=c7szjv98874zcopc1wd1g2q6w4v7fcco for 124.70.221.221/>]>
2023-11-10 17:51:34 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:34 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:34 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:34 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:34 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:34 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:34 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:34 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1206604",
        "sql": ""
    }
}
2023-11-10 17:51:34 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:34 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:43 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=iine28fwkmhyw9pi9on66p8ufa3jjmsd; expires=Fri, 24-Nov-2023 09:51:43 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'iine28fwkmhyw9pi9on66p8ufa3jjmsd'}]
cost: 4577ms
cookie: <RequestsCookieJar[<Cookie sessionid=iine28fwkmhyw9pi9on66p8ufa3jjmsd for 124.70.221.221/>]>
2023-11-10 17:51:34 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:34 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:34 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:34 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:34 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:34 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:34 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:34 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1359789",
        "sql": ""
    }
}
2023-11-10 17:51:34 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:34 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:43 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=56rnubf2wunmzmxtc4n0ehoyuvw5y9bq; expires=Fri, 24-Nov-2023 09:51:43 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "3056a273da6d220ffb00f954cb32505916212075"
}
cookies: [{'name': 'sessionid', 'value': '56rnubf2wunmzmxtc4n0ehoyuvw5y9bq'}]
cost: 4297ms
cookie: <RequestsCookieJar[<Cookie sessionid=56rnubf2wunmzmxtc4n0ehoyuvw5y9bq for 124.70.221.221/>]>
2023-11-10 17:51:34 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:34 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:34 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:34 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:34 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:34 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:34 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:34 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1616040",
        "sql": ""
    }
}
2023-11-10 17:51:34 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:35 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:43 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=njtyud38nyvb4jqjs7zwtjspngogiugj; expires=Fri, 24-Nov-2023 09:51:43 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'njtyud38nyvb4jqjs7zwtjspngogiugj'}]
cost: 2068ms
cookie: <RequestsCookieJar[<Cookie sessionid=njtyud38nyvb4jqjs7zwtjspngogiugj for 124.70.221.221/>]>
2023-11-10 17:51:35 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:35 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:35 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:35 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:35 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:35 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:35 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:35 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1066670",
        "sql": ""
    }
}
2023-11-10 17:51:35 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:35 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:44 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=id2i3edj04m3vu6o46vfusajsaa6psn8; expires=Fri, 24-Nov-2023 09:51:44 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "00a9e63236dca30132cb616b945a968b22f957b3"
}
cookies: [{'name': 'sessionid', 'value': 'id2i3edj04m3vu6o46vfusajsaa6psn8'}]
cost: 2164ms
cookie: <RequestsCookieJar[<Cookie sessionid=id2i3edj04m3vu6o46vfusajsaa6psn8 for 124.70.221.221/>]>
2023-11-10 17:51:35 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:35 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:35 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:35 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:35 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:35 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:35 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:35 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1528925",
        "sql": ""
    }
}
2023-11-10 17:51:35 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:35 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:44 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=duhxa4xxnwi7yqmzl1y9ee89cu4moq3e; expires=Fri, 24-Nov-2023 09:51:44 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'duhxa4xxnwi7yqmzl1y9ee89cu4moq3e'}]
cost: 2129ms
cookie: <RequestsCookieJar[<Cookie sessionid=duhxa4xxnwi7yqmzl1y9ee89cu4moq3e for 124.70.221.221/>]>
2023-11-10 17:51:35 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:35 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:35 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:35 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:35 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:35 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:35 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:35 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1347462",
        "sql": ""
    }
}
2023-11-10 17:51:35 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:35 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:44 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=wauddoqbvd6g11neg9lo7noqz3ses305; expires=Fri, 24-Nov-2023 09:51:44 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "300b0932524d5be51b960da7b35f84b7261fd34c"
}
cookies: [{'name': 'sessionid', 'value': 'wauddoqbvd6g11neg9lo7noqz3ses305'}]
cost: 2608ms
cookie: <RequestsCookieJar[<Cookie sessionid=wauddoqbvd6g11neg9lo7noqz3ses305 for 124.70.221.221/>]>
2023-11-10 17:51:35 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:35 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:35 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:35 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:35 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:35 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:35 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:35 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1507983",
        "sql": ""
    }
}
2023-11-10 17:51:35 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:36 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:44 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=e1hmxol9by0wk0y2zf0dghm0zfcdx58g; expires=Fri, 24-Nov-2023 09:51:44 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'e1hmxol9by0wk0y2zf0dghm0zfcdx58g'}]
cost: 1899ms
cookie: <RequestsCookieJar[<Cookie sessionid=e1hmxol9by0wk0y2zf0dghm0zfcdx58g for 124.70.221.221/>]>
2023-11-10 17:51:36 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:36 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:36 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:36 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:36 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:36 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:36 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:36 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1864310",
        "sql": ""
    }
}
2023-11-10 17:51:36 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:36 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:45 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=jrm0suz6nblay50wwtwbw0zlw1yeun8g; expires=Fri, 24-Nov-2023 09:51:45 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a2977e362f7f5d040d44d249df78b10d4d409a8d"
}
cookies: [{'name': 'sessionid', 'value': 'jrm0suz6nblay50wwtwbw0zlw1yeun8g'}]
cost: 2257ms
cookie: <RequestsCookieJar[<Cookie sessionid=jrm0suz6nblay50wwtwbw0zlw1yeun8g for 124.70.221.221/>]>
2023-11-10 17:51:36 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:36 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:36 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:36 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:36 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:36 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:36 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:36 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1110724",
        "sql": ""
    }
}
2023-11-10 17:51:36 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:36 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:45 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=kj3793r91xhnocv2o4qb9kyck6j1flhf; expires=Fri, 24-Nov-2023 09:51:45 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'kj3793r91xhnocv2o4qb9kyck6j1flhf'}]
cost: 2004ms
cookie: <RequestsCookieJar[<Cookie sessionid=kj3793r91xhnocv2o4qb9kyck6j1flhf for 124.70.221.221/>]>
2023-11-10 17:51:36 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:36 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:36 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:36 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:36 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:36 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:36 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:36 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1699765",
        "sql": ""
    }
}
2023-11-10 17:51:36 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:36 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:45 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=e1oudgkpaz74iqn062ikypsyc7c8djwf; expires=Fri, 24-Nov-2023 09:51:45 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "09249df177b1161f2e3ce05ec1d5751234522549"
}
cookies: [{'name': 'sessionid', 'value': 'e1oudgkpaz74iqn062ikypsyc7c8djwf'}]
cost: 2163ms
cookie: <RequestsCookieJar[<Cookie sessionid=e1oudgkpaz74iqn062ikypsyc7c8djwf for 124.70.221.221/>]>
2023-11-10 17:51:36 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:36 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:36 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:36 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:36 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:36 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:36 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:36 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1641363",
        "sql": ""
    }
}
2023-11-10 17:51:36 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:36 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:45 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=43xj5c94emb81jobr1kyyz3sbg5czn6c; expires=Fri, 24-Nov-2023 09:51:45 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '43xj5c94emb81jobr1kyyz3sbg5czn6c'}]
cost: 2120ms
cookie: <RequestsCookieJar[<Cookie sessionid=43xj5c94emb81jobr1kyyz3sbg5czn6c for 124.70.221.221/>]>
2023-11-10 17:51:36 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:36 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:36 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:36 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:36 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:36 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:36 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:36 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1289010",
        "sql": ""
    }
}
2023-11-10 17:51:36 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:37 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:45 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=5rkp0g9u77gu23erp5482uw2o6sukmzz; expires=Fri, 24-Nov-2023 09:51:45 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "121abc5ad8699b06359489db3fa917888f4a1287"
}
cookies: [{'name': 'sessionid', 'value': '5rkp0g9u77gu23erp5482uw2o6sukmzz'}]
cost: 2182ms
cookie: <RequestsCookieJar[<Cookie sessionid=5rkp0g9u77gu23erp5482uw2o6sukmzz for 124.70.221.221/>]>
2023-11-10 17:51:37 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:37 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:37 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:37 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:37 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:37 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:37 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:37 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1367709",
        "sql": ""
    }
}
2023-11-10 17:51:37 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:37 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:46 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=0omi4vzlw7ilwncasdmuss7dn8amerdf; expires=Fri, 24-Nov-2023 09:51:46 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '0omi4vzlw7ilwncasdmuss7dn8amerdf'}]
cost: 2468ms
cookie: <RequestsCookieJar[<Cookie sessionid=0omi4vzlw7ilwncasdmuss7dn8amerdf for 124.70.221.221/>]>
2023-11-10 17:51:37 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:37 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:37 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:37 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:37 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:37 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:51:37 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:37 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1569413",
        "sql": ""
    }
}
2023-11-10 17:51:37 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:51:37 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:51:46 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=vhr5xyxirn88rbshky60dgmbw7gts6m7; expires=Fri, 24-Nov-2023 09:51:46 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "4e1863a3877ba2449236dcf33a54a84f9c8ebdff"
}
cookies: [{'name': 'sessionid', 'value': 'vhr5xyxirn88rbshky60dgmbw7gts6m7'}]
cost: 2189ms
cookie: <RequestsCookieJar[<Cookie sessionid=vhr5xyxirn88rbshky60dgmbw7gts6m7 for 124.70.221.221/>]>
2023-11-10 17:51:37 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:51:37 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:51:37 [INFO]: 执行文件-> testNone.yaml
2023-11-10 17:51:37 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:51:37 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:51:37 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testNone[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:51:37 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:51:37 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1043453",
        "sql": ""
    }
}
2023-11-10 17:51:37 [INFO]: f--------  执行前置条件 ----------
func1
