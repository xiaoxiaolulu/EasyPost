2023-11-10 17:56:56 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:56 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:56 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:56 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:56 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:56 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1292487",
        "sql": ""
    }
}
2023-11-10 17:56:56 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:57 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:05 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=3qnko1uzl3oei2lymzmcemnj5x9wms1j; expires=Fri, 24-Nov-2023 09:57:05 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "32de4f07a152454829706d4fd080b41a191cebdf"
}
cookies: [{'name': 'sessionid', 'value': '3qnko1uzl3oei2lymzmcemnj5x9wms1j'}]
cost: 2171ms
cookie: <RequestsCookieJar[<Cookie sessionid=3qnko1uzl3oei2lymzmcemnj5x9wms1j for 124.70.221.221/>]>
2023-11-10 17:56:57 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:57 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:57 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:57 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:57 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:57 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:57 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:57 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1233978",
        "sql": ""
    }
}
2023-11-10 17:56:57 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:57 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:06 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=pss6gn2l2fuvxy3cutsd77nmrrxyuexr; expires=Fri, 24-Nov-2023 09:57:06 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'pss6gn2l2fuvxy3cutsd77nmrrxyuexr'}]
cost: 3895ms
cookie: <RequestsCookieJar[<Cookie sessionid=pss6gn2l2fuvxy3cutsd77nmrrxyuexr for 124.70.221.221/>]>
2023-11-10 17:56:57 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:57 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:57 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:57 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:57 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:57 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:57 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:57 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1107504",
        "sql": ""
    }
}
2023-11-10 17:56:57 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:57 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:06 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=qn8uwz60eqw265e1q574vbmdhm5283wu; expires=Fri, 24-Nov-2023 09:57:06 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "c1ddcc42b8a6c7b77ee771dfc8b17777ad7a250e"
}
cookies: [{'name': 'sessionid', 'value': 'qn8uwz60eqw265e1q574vbmdhm5283wu'}]
cost: 2254ms
cookie: <RequestsCookieJar[<Cookie sessionid=qn8uwz60eqw265e1q574vbmdhm5283wu for 124.70.221.221/>]>
2023-11-10 17:56:57 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:57 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:57 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:57 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:57 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:57 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:57 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:57 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1752519",
        "sql": ""
    }
}
2023-11-10 17:56:57 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:58 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:06 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=hl52fa8mr0trzesgaf12uhlt0pionflk; expires=Fri, 24-Nov-2023 09:57:06 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'hl52fa8mr0trzesgaf12uhlt0pionflk'}]
cost: 2356ms
cookie: <RequestsCookieJar[<Cookie sessionid=hl52fa8mr0trzesgaf12uhlt0pionflk for 124.70.221.221/>]>
2023-11-10 17:56:58 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:58 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1043647",
        "sql": ""
    }
}
2023-11-10 17:56:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:58 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=nzwpbusj35m2pysq4m3tadz4jrnct7h8; expires=Fri, 24-Nov-2023 09:57:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "d0036ac3dfbf055c236e3e297640afa731d8d309"
}
cookies: [{'name': 'sessionid', 'value': 'nzwpbusj35m2pysq4m3tadz4jrnct7h8'}]
cost: 2434ms
cookie: <RequestsCookieJar[<Cookie sessionid=nzwpbusj35m2pysq4m3tadz4jrnct7h8 for 124.70.221.221/>]>
2023-11-10 17:56:58 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:58 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1172647",
        "sql": ""
    }
}
2023-11-10 17:56:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:58 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=px4nwgtuuo71ua8ewngpk5jtyeg9s9c8; expires=Fri, 24-Nov-2023 09:57:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'px4nwgtuuo71ua8ewngpk5jtyeg9s9c8'}]
cost: 1976ms
cookie: <RequestsCookieJar[<Cookie sessionid=px4nwgtuuo71ua8ewngpk5jtyeg9s9c8 for 124.70.221.221/>]>
2023-11-10 17:56:58 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:58 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1448959",
        "sql": ""
    }
}
2023-11-10 17:56:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:58 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=me2slf54xhimifc7pwr9q4kzowtffg56; expires=Fri, 24-Nov-2023 09:57:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a904e7939b46b6affe9db8df3d7f7fe19a6928c7"
}
cookies: [{'name': 'sessionid', 'value': 'me2slf54xhimifc7pwr9q4kzowtffg56'}]
cost: 2194ms
cookie: <RequestsCookieJar[<Cookie sessionid=me2slf54xhimifc7pwr9q4kzowtffg56 for 124.70.221.221/>]>
2023-11-10 17:56:58 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:58 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1299190",
        "sql": ""
    }
}
2023-11-10 17:56:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:58 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=gqnkika06moq8bbqjxuk9qpu37v9z69b; expires=Fri, 24-Nov-2023 09:57:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'gqnkika06moq8bbqjxuk9qpu37v9z69b'}]
cost: 1949ms
cookie: <RequestsCookieJar[<Cookie sessionid=gqnkika06moq8bbqjxuk9qpu37v9z69b for 124.70.221.221/>]>
2023-11-10 17:56:58 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:58 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1319532",
        "sql": ""
    }
}
2023-11-10 17:56:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=rjix9y64qvr2doligdv0mnckxmk0k2vk; expires=Fri, 24-Nov-2023 09:57:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f7bed4f85ce1963203647dc8b5e8837db9d1c179"
}
cookies: [{'name': 'sessionid', 'value': 'rjix9y64qvr2doligdv0mnckxmk0k2vk'}]
cost: 2157ms
cookie: <RequestsCookieJar[<Cookie sessionid=rjix9y64qvr2doligdv0mnckxmk0k2vk for 124.70.221.221/>]>
2023-11-10 17:56:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1495342",
        "sql": ""
    }
}
2023-11-10 17:56:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=fin3c4nli2rou3fs1e6f8o9zj8xtgtgh; expires=Fri, 24-Nov-2023 09:57:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'fin3c4nli2rou3fs1e6f8o9zj8xtgtgh'}]
cost: 2230ms
cookie: <RequestsCookieJar[<Cookie sessionid=fin3c4nli2rou3fs1e6f8o9zj8xtgtgh for 124.70.221.221/>]>
2023-11-10 17:56:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1299529",
        "sql": ""
    }
}
2023-11-10 17:56:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=wy8k0q3pnbdjpm7ak7957smepa05gakz; expires=Fri, 24-Nov-2023 09:57:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "65dfa579b3ecc57e6a5bc43052c966c2ab5b855b"
}
cookies: [{'name': 'sessionid', 'value': 'wy8k0q3pnbdjpm7ak7957smepa05gakz'}]
cost: 2150ms
cookie: <RequestsCookieJar[<Cookie sessionid=wy8k0q3pnbdjpm7ak7957smepa05gakz for 124.70.221.221/>]>
2023-11-10 17:56:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1696857",
        "sql": ""
    }
}
2023-11-10 17:56:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=5v9gskrdpv2s0zpft6aqwpt6oiuncxr0; expires=Fri, 24-Nov-2023 09:57:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '5v9gskrdpv2s0zpft6aqwpt6oiuncxr0'}]
cost: 2156ms
cookie: <RequestsCookieJar[<Cookie sessionid=5v9gskrdpv2s0zpft6aqwpt6oiuncxr0 for 124.70.221.221/>]>
2023-11-10 17:56:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:56:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1890074",
        "sql": ""
    }
}
2023-11-10 17:56:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:56:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ru8sc4upjski88ym540zzk4xi73zdq7f; expires=Fri, 24-Nov-2023 09:57:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "df8faf942b6e7d3ac0d545cc07e77bd25a0240fd"
}
cookies: [{'name': 'sessionid', 'value': 'ru8sc4upjski88ym540zzk4xi73zdq7f'}]
cost: 2164ms
cookie: <RequestsCookieJar[<Cookie sessionid=ru8sc4upjski88ym540zzk4xi73zdq7f for 124.70.221.221/>]>
2023-11-10 17:56:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:56:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:56:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:56:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:56:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:56:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:56:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:56:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1346281",
        "sql": ""
    }
}
2023-11-10 17:56:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=6zxn3ldpbyjk7hwwz6q3sxzkhqbs5fh8; expires=Fri, 24-Nov-2023 09:57:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '6zxn3ldpbyjk7hwwz6q3sxzkhqbs5fh8'}]
cost: 1951ms
cookie: <RequestsCookieJar[<Cookie sessionid=6zxn3ldpbyjk7hwwz6q3sxzkhqbs5fh8 for 124.70.221.221/>]>
2023-11-10 17:57:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1268612",
        "sql": ""
    }
}
2023-11-10 17:57:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=8jk2xh70688sjxnmovsk21xwj2qqhu8h; expires=Fri, 24-Nov-2023 09:57:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "40ea2015ee3e3d6de99ab3fb0f7eb54c960d98a1"
}
cookies: [{'name': 'sessionid', 'value': '8jk2xh70688sjxnmovsk21xwj2qqhu8h'}]
cost: 2159ms
cookie: <RequestsCookieJar[<Cookie sessionid=8jk2xh70688sjxnmovsk21xwj2qqhu8h for 124.70.221.221/>]>
2023-11-10 17:57:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1323931",
        "sql": ""
    }
}
2023-11-10 17:57:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=pbfho8dc62u9ugrze2uejoyo55rnbyj3; expires=Fri, 24-Nov-2023 09:57:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'pbfho8dc62u9ugrze2uejoyo55rnbyj3'}]
cost: 1895ms
cookie: <RequestsCookieJar[<Cookie sessionid=pbfho8dc62u9ugrze2uejoyo55rnbyj3 for 124.70.221.221/>]>
2023-11-10 17:57:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1712931",
        "sql": ""
    }
}
2023-11-10 17:57:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=khd9vbkg0zg00i20oygi6qr3pqkdxkna; expires=Fri, 24-Nov-2023 09:57:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "42f09cf99f99a7cbb16fdd547be335424a371ad1"
}
cookies: [{'name': 'sessionid', 'value': 'khd9vbkg0zg00i20oygi6qr3pqkdxkna'}]
cost: 2153ms
cookie: <RequestsCookieJar[<Cookie sessionid=khd9vbkg0zg00i20oygi6qr3pqkdxkna for 124.70.221.221/>]>
2023-11-10 17:57:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1080413",
        "sql": ""
    }
}
2023-11-10 17:57:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=lpvkqrah1zbztsjlvztkdib47f2ij6m9; expires=Fri, 24-Nov-2023 09:57:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'lpvkqrah1zbztsjlvztkdib47f2ij6m9'}]
cost: 2084ms
cookie: <RequestsCookieJar[<Cookie sessionid=lpvkqrah1zbztsjlvztkdib47f2ij6m9 for 124.70.221.221/>]>
2023-11-10 17:57:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1080897",
        "sql": ""
    }
}
2023-11-10 17:57:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=yg2yymt304q2elb9fl1p9dvabtgs4mbe; expires=Fri, 24-Nov-2023 09:57:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "039eee010aa509d7ef1008eb8b44baa4f2204583"
}
cookies: [{'name': 'sessionid', 'value': 'yg2yymt304q2elb9fl1p9dvabtgs4mbe'}]
cost: 2170ms
cookie: <RequestsCookieJar[<Cookie sessionid=yg2yymt304q2elb9fl1p9dvabtgs4mbe for 124.70.221.221/>]>
2023-11-10 17:57:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1367212",
        "sql": ""
    }
}
2023-11-10 17:57:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=11kv71ge9gd2p57hq83yfbwcpd9ve3bm; expires=Fri, 24-Nov-2023 09:57:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '11kv71ge9gd2p57hq83yfbwcpd9ve3bm'}]
cost: 2594ms
cookie: <RequestsCookieJar[<Cookie sessionid=11kv71ge9gd2p57hq83yfbwcpd9ve3bm for 124.70.221.221/>]>
2023-11-10 17:57:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1265509",
        "sql": ""
    }
}
2023-11-10 17:57:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=8johffnb9o54spn37u8c0qy9pf30ecu7; expires=Fri, 24-Nov-2023 09:57:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "62f650d6e7bcc06d7b3306cb9a6439cb75f47539"
}
cookies: [{'name': 'sessionid', 'value': '8johffnb9o54spn37u8c0qy9pf30ecu7'}]
cost: 2374ms
cookie: <RequestsCookieJar[<Cookie sessionid=8johffnb9o54spn37u8c0qy9pf30ecu7 for 124.70.221.221/>]>
2023-11-10 17:57:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1651157",
        "sql": ""
    }
}
2023-11-10 17:57:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=z6zefq4sz5estnsva8j0nfr85v5ya43z; expires=Fri, 24-Nov-2023 09:57:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'z6zefq4sz5estnsva8j0nfr85v5ya43z'}]
cost: 2833ms
cookie: <RequestsCookieJar[<Cookie sessionid=z6zefq4sz5estnsva8j0nfr85v5ya43z for 124.70.221.221/>]>
2023-11-10 17:57:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1543836",
        "sql": ""
    }
}
2023-11-10 17:57:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=yke9xfnbyusc8pl696nnt1a7caawdtlt; expires=Fri, 24-Nov-2023 09:57:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a4ab3fa9f835c0224caef5d7ff45d01717544f18"
}
cookies: [{'name': 'sessionid', 'value': 'yke9xfnbyusc8pl696nnt1a7caawdtlt'}]
cost: 2249ms
cookie: <RequestsCookieJar[<Cookie sessionid=yke9xfnbyusc8pl696nnt1a7caawdtlt for 124.70.221.221/>]>
2023-11-10 17:57:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1819775",
        "sql": ""
    }
}
2023-11-10 17:57:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=vi38lpaurysw5cw3v3u19c2k0y0ko0zm; expires=Fri, 24-Nov-2023 09:57:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'vi38lpaurysw5cw3v3u19c2k0y0ko0zm'}]
cost: 3293ms
cookie: <RequestsCookieJar[<Cookie sessionid=vi38lpaurysw5cw3v3u19c2k0y0ko0zm for 124.70.221.221/>]>
2023-11-10 17:57:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1957237",
        "sql": ""
    }
}
2023-11-10 17:57:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=brwuwkpxu1wyt8nflur2l3sqpv8dhkkq; expires=Fri, 24-Nov-2023 09:57:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f3fe1b8766ab59bffebc69f599ad1631774d0345"
}
cookies: [{'name': 'sessionid', 'value': 'brwuwkpxu1wyt8nflur2l3sqpv8dhkkq'}]
cost: 2513ms
cookie: <RequestsCookieJar[<Cookie sessionid=brwuwkpxu1wyt8nflur2l3sqpv8dhkkq for 124.70.221.221/>]>
2023-11-10 17:57:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1087253",
        "sql": ""
    }
}
2023-11-10 17:57:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:03 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=x1b3q95wndms5g3znmz840r5gu56kl8m; expires=Fri, 24-Nov-2023 09:57:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'x1b3q95wndms5g3znmz840r5gu56kl8m'}]
cost: 1995ms
cookie: <RequestsCookieJar[<Cookie sessionid=x1b3q95wndms5g3znmz840r5gu56kl8m for 124.70.221.221/>]>
2023-11-10 17:57:03 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:03 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:03 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:03 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:03 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:03 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:03 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:03 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1875191",
        "sql": ""
    }
}
2023-11-10 17:57:03 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:03 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:12 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=9x62n832wqpmi8b3vmmlsbz1a6pvuop2; expires=Fri, 24-Nov-2023 09:57:12 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "6ccf093727e38f1e58a9b86d45baa56c3a89a699"
}
cookies: [{'name': 'sessionid', 'value': '9x62n832wqpmi8b3vmmlsbz1a6pvuop2'}]
cost: 2300ms
cookie: <RequestsCookieJar[<Cookie sessionid=9x62n832wqpmi8b3vmmlsbz1a6pvuop2 for 124.70.221.221/>]>
2023-11-10 17:57:03 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:03 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:03 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:03 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:03 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:03 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:03 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:03 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1537894",
        "sql": ""
    }
}
2023-11-10 17:57:03 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:03 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:12 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=yndatibifacyg0fm0oe5cqfjgpfkgw36; expires=Fri, 24-Nov-2023 09:57:12 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'yndatibifacyg0fm0oe5cqfjgpfkgw36'}]
cost: 3279ms
cookie: <RequestsCookieJar[<Cookie sessionid=yndatibifacyg0fm0oe5cqfjgpfkgw36 for 124.70.221.221/>]>
2023-11-10 17:57:03 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:03 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:03 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:03 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:03 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:03 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:03 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:03 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1666539",
        "sql": ""
    }
}
2023-11-10 17:57:03 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:03 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:12 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=40rt7pvc3pvbg0qrys2bxqabbm73p89z; expires=Fri, 24-Nov-2023 09:57:12 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "42c43c5b532c1aa28bee57df95511f968380c572"
}
cookies: [{'name': 'sessionid', 'value': '40rt7pvc3pvbg0qrys2bxqabbm73p89z'}]
cost: 2416ms
cookie: <RequestsCookieJar[<Cookie sessionid=40rt7pvc3pvbg0qrys2bxqabbm73p89z for 124.70.221.221/>]>
2023-11-10 17:57:03 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:03 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:03 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:03 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:03 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:03 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:03 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:03 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1332873",
        "sql": ""
    }
}
2023-11-10 17:57:03 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:04 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:12 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=zlrxd495fstqo6fo2vizi56mrbrunztz; expires=Fri, 24-Nov-2023 09:57:12 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'zlrxd495fstqo6fo2vizi56mrbrunztz'}]
cost: 2073ms
cookie: <RequestsCookieJar[<Cookie sessionid=zlrxd495fstqo6fo2vizi56mrbrunztz for 124.70.221.221/>]>
2023-11-10 17:57:04 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:04 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:04 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:04 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:04 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:04 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:04 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:04 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1620440",
        "sql": ""
    }
}
2023-11-10 17:57:04 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:04 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:13 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=zu7n6gwe15e6tcorxuvf97ggohiq5lse; expires=Fri, 24-Nov-2023 09:57:13 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "beefb82593064053c7f4eec60a6e55a918ff5122"
}
cookies: [{'name': 'sessionid', 'value': 'zu7n6gwe15e6tcorxuvf97ggohiq5lse'}]
cost: 2339ms
cookie: <RequestsCookieJar[<Cookie sessionid=zu7n6gwe15e6tcorxuvf97ggohiq5lse for 124.70.221.221/>]>
2023-11-10 17:57:04 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:04 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:04 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:04 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:04 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:04 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:04 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:04 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1179883",
        "sql": ""
    }
}
2023-11-10 17:57:04 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:04 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:13 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=120t27233ju9u31t51ytxkd875c9umjl; expires=Fri, 24-Nov-2023 09:57:13 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '120t27233ju9u31t51ytxkd875c9umjl'}]
cost: 3532ms
cookie: <RequestsCookieJar[<Cookie sessionid=120t27233ju9u31t51ytxkd875c9umjl for 124.70.221.221/>]>
2023-11-10 17:57:04 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:04 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:04 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:04 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:04 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:04 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:04 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:04 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1545016",
        "sql": ""
    }
}
2023-11-10 17:57:04 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:04 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:13 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=wwt166jrkjgvtrdvbwqpvm2l4m8t0cm9; expires=Fri, 24-Nov-2023 09:57:13 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "0c3e9d8bd739f3db58fd66a2d2620cd951c20a20"
}
cookies: [{'name': 'sessionid', 'value': 'wwt166jrkjgvtrdvbwqpvm2l4m8t0cm9'}]
cost: 2258ms
cookie: <RequestsCookieJar[<Cookie sessionid=wwt166jrkjgvtrdvbwqpvm2l4m8t0cm9 for 124.70.221.221/>]>
2023-11-10 17:57:04 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:04 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:04 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:04 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:04 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:04 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:04 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:04 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1806583",
        "sql": ""
    }
}
2023-11-10 17:57:04 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:05 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:13 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=3es085cd0x2s1sy51n9gdk878gfixzga; expires=Fri, 24-Nov-2023 09:57:13 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '3es085cd0x2s1sy51n9gdk878gfixzga'}]
cost: 2134ms
cookie: <RequestsCookieJar[<Cookie sessionid=3es085cd0x2s1sy51n9gdk878gfixzga for 124.70.221.221/>]>
2023-11-10 17:57:05 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:05 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:05 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:05 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:05 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:05 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:05 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:05 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1317873",
        "sql": ""
    }
}
2023-11-10 17:57:05 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:05 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:14 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=x3z1yng3ojwf1asctaln9fijid420wn7; expires=Fri, 24-Nov-2023 09:57:14 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "01824b59b874a37c2e68d914bb65e3bb807505a8"
}
cookies: [{'name': 'sessionid', 'value': 'x3z1yng3ojwf1asctaln9fijid420wn7'}]
cost: 2844ms
cookie: <RequestsCookieJar[<Cookie sessionid=x3z1yng3ojwf1asctaln9fijid420wn7 for 124.70.221.221/>]>
2023-11-10 17:57:05 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:05 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:05 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:05 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:05 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:05 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:05 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:05 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1059227",
        "sql": ""
    }
}
2023-11-10 17:57:05 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:05 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:14 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=e66ktpo2yybyxi1b6mjcj1xwscyq0a20; expires=Fri, 24-Nov-2023 09:57:14 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'e66ktpo2yybyxi1b6mjcj1xwscyq0a20'}]
cost: 2000ms
cookie: <RequestsCookieJar[<Cookie sessionid=e66ktpo2yybyxi1b6mjcj1xwscyq0a20 for 124.70.221.221/>]>
2023-11-10 17:57:05 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:05 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:05 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:05 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:05 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:05 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:05 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:05 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1110214",
        "sql": ""
    }
}
2023-11-10 17:57:05 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:05 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:14 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=1db7d3yscahf6vo8kh1q7e8rbq7yx1nt; expires=Fri, 24-Nov-2023 09:57:14 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "f95c2da94b780a5f21267a43b0721d03d7d1a6b4"
}
cookies: [{'name': 'sessionid', 'value': '1db7d3yscahf6vo8kh1q7e8rbq7yx1nt'}]
cost: 2265ms
cookie: <RequestsCookieJar[<Cookie sessionid=1db7d3yscahf6vo8kh1q7e8rbq7yx1nt for 124.70.221.221/>]>
2023-11-10 17:57:05 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:05 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:05 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:05 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:05 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:05 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:05 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:05 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1756066",
        "sql": ""
    }
}
2023-11-10 17:57:05 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:06 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:14 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=726jr1yt191dqoppcv7d7gyehctgffkr; expires=Fri, 24-Nov-2023 09:57:14 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '726jr1yt191dqoppcv7d7gyehctgffkr'}]
cost: 2161ms
cookie: <RequestsCookieJar[<Cookie sessionid=726jr1yt191dqoppcv7d7gyehctgffkr for 124.70.221.221/>]>
2023-11-10 17:57:06 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:06 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:06 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:06 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:06 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:06 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:57:06 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:06 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1325651",
        "sql": ""
    }
}
2023-11-10 17:57:06 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:57:06 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:57:15 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=dbmifgcb3a3k8lojz185egy7p5mu8pdm; expires=Fri, 24-Nov-2023 09:57:15 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "1c75b27e89d20bfee6ec978047b8544c8344cab1"
}
cookies: [{'name': 'sessionid', 'value': 'dbmifgcb3a3k8lojz185egy7p5mu8pdm'}]
cost: 2546ms
cookie: <RequestsCookieJar[<Cookie sessionid=dbmifgcb3a3k8lojz185egy7p5mu8pdm for 124.70.221.221/>]>
2023-11-10 17:57:06 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:57:06 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:57:06 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:57:06 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:57:06 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:57:06 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:57:06 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:57:06 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1693380",
        "sql": ""
    }
}
2023-11-10 17:57:06 [INFO]: f--------  执行前置条件 ----------
func1
