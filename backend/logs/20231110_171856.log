2023-11-10 17:18:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:18:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1278844",
        "sql": ""
    }
}
2023-11-10 17:18:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:18:58 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=bozdgfb8ct67q84i4odrhs20vbow8yr1; expires=Fri, 24-Nov-2023 09:19:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a65397cad16b14b7de1cd6e5c92a9c7f3223649d"
}
cookies: [{'name': 'sessionid', 'value': 'bozdgfb8ct67q84i4odrhs20vbow8yr1'}]
cost: 2195ms
cookie: <RequestsCookieJar[<Cookie sessionid=bozdgfb8ct67q84i4odrhs20vbow8yr1 for 124.70.221.221/>]>
2023-11-10 17:18:58 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:18:58 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:18:58 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:58 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:58 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:58 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:18:58 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:58 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1548587",
        "sql": ""
    }
}
2023-11-10 17:18:58 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:18:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:07 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=dk138208oax5xqmm7jiop6grfx2xjly4; expires=Fri, 24-Nov-2023 09:19:07 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'dk138208oax5xqmm7jiop6grfx2xjly4'}]
cost: 2140ms
cookie: <RequestsCookieJar[<Cookie sessionid=dk138208oax5xqmm7jiop6grfx2xjly4 for 124.70.221.221/>]>
2023-11-10 17:18:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:18:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:18:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:18:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1047854",
        "sql": ""
    }
}
2023-11-10 17:18:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:18:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=rjrf5b5occc5nzt6mnzlwcxopu88omvy; expires=Fri, 24-Nov-2023 09:19:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "7bcf02944db6bbc07524ccf5c9ee3466a930c574"
}
cookies: [{'name': 'sessionid', 'value': 'rjrf5b5occc5nzt6mnzlwcxopu88omvy'}]
cost: 2125ms
cookie: <RequestsCookieJar[<Cookie sessionid=rjrf5b5occc5nzt6mnzlwcxopu88omvy for 124.70.221.221/>]>
2023-11-10 17:18:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:18:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:18:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:18:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1386271",
        "sql": ""
    }
}
2023-11-10 17:18:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:18:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=wz5a33yecz74yf98dg7evmsaf9atb0vd; expires=Fri, 24-Nov-2023 09:19:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'wz5a33yecz74yf98dg7evmsaf9atb0vd'}]
cost: 1862ms
cookie: <RequestsCookieJar[<Cookie sessionid=wz5a33yecz74yf98dg7evmsaf9atb0vd for 124.70.221.221/>]>
2023-11-10 17:18:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:18:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:18:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:18:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1293321",
        "sql": ""
    }
}
2023-11-10 17:18:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:18:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=yvn775xta9itz0cwqz2vu1tm98uholyl; expires=Fri, 24-Nov-2023 09:19:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a440668b5fe0bded9ca034cc7d75ec7bee9b7f12"
}
cookies: [{'name': 'sessionid', 'value': 'yvn775xta9itz0cwqz2vu1tm98uholyl'}]
cost: 2143ms
cookie: <RequestsCookieJar[<Cookie sessionid=yvn775xta9itz0cwqz2vu1tm98uholyl for 124.70.221.221/>]>
2023-11-10 17:18:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:18:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:18:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:18:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1067811",
        "sql": ""
    }
}
2023-11-10 17:18:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:18:59 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:08 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=ri7kec6zenbf6u85fel9ib1wrozu9895; expires=Fri, 24-Nov-2023 09:19:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'ri7kec6zenbf6u85fel9ib1wrozu9895'}]
cost: 2473ms
cookie: <RequestsCookieJar[<Cookie sessionid=ri7kec6zenbf6u85fel9ib1wrozu9895 for 124.70.221.221/>]>
2023-11-10 17:18:59 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:18:59 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:18:59 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:18:59 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:18:59 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:18:59 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:18:59 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:18:59 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1604368",
        "sql": ""
    }
}
2023-11-10 17:18:59 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=aknov8sa7c2b3cag3cke4oq87ixnvnki; expires=Fri, 24-Nov-2023 09:19:08 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "7e23fcf6bdff2eaed1dc2e1aa7827480e61bfc7e"
}
cookies: [{'name': 'sessionid', 'value': 'aknov8sa7c2b3cag3cke4oq87ixnvnki'}]
cost: 2432ms
cookie: <RequestsCookieJar[<Cookie sessionid=aknov8sa7c2b3cag3cke4oq87ixnvnki for 124.70.221.221/>]>
2023-11-10 17:19:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1865903",
        "sql": ""
    }
}
2023-11-10 17:19:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=3pkevzscoyxzgkwp6o2ghkid96dctlm9; expires=Fri, 24-Nov-2023 09:19:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '3pkevzscoyxzgkwp6o2ghkid96dctlm9'}]
cost: 2083ms
cookie: <RequestsCookieJar[<Cookie sessionid=3pkevzscoyxzgkwp6o2ghkid96dctlm9 for 124.70.221.221/>]>
2023-11-10 17:19:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:19:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1594165",
        "sql": ""
    }
}
2023-11-10 17:19:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=mehidbuv44cz95un9y5gowyjcle5dlvj; expires=Fri, 24-Nov-2023 09:19:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "07b0d9085c921fd19735c36599ef3dd063578c4e"
}
cookies: [{'name': 'sessionid', 'value': 'mehidbuv44cz95un9y5gowyjcle5dlvj'}]
cost: 2186ms
cookie: <RequestsCookieJar[<Cookie sessionid=mehidbuv44cz95un9y5gowyjcle5dlvj for 124.70.221.221/>]>
2023-11-10 17:19:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1066060",
        "sql": ""
    }
}
2023-11-10 17:19:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:00 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=uzo4wusqiq9nr71f3gj8um1yn13rr8rp; expires=Fri, 24-Nov-2023 09:19:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'uzo4wusqiq9nr71f3gj8um1yn13rr8rp'}]
cost: 1971ms
cookie: <RequestsCookieJar[<Cookie sessionid=uzo4wusqiq9nr71f3gj8um1yn13rr8rp for 124.70.221.221/>]>
2023-11-10 17:19:00 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:00 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:00 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:00 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:00 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:00 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:19:00 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:00 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1995344",
        "sql": ""
    }
}
2023-11-10 17:19:00 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:09 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=2mpjupkskz708ae9qajdgdbivn56yk12; expires=Fri, 24-Nov-2023 09:19:09 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "baf3c927313923f130d7516f72747cacadd94116"
}
cookies: [{'name': 'sessionid', 'value': '2mpjupkskz708ae9qajdgdbivn56yk12'}]
cost: 2217ms
cookie: <RequestsCookieJar[<Cookie sessionid=2mpjupkskz708ae9qajdgdbivn56yk12 for 124.70.221.221/>]>
2023-11-10 17:19:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1538956",
        "sql": ""
    }
}
2023-11-10 17:19:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=dff6vc6fp862q7sio8klwe7ziygipvgs; expires=Fri, 24-Nov-2023 09:19:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'dff6vc6fp862q7sio8klwe7ziygipvgs'}]
cost: 2072ms
cookie: <RequestsCookieJar[<Cookie sessionid=dff6vc6fp862q7sio8klwe7ziygipvgs for 124.70.221.221/>]>
2023-11-10 17:19:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:19:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1698011",
        "sql": ""
    }
}
2023-11-10 17:19:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=s7twe6efew0w3k5u4e46ct05aku8cvf8; expires=Fri, 24-Nov-2023 09:19:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "858972a91b2c1e1d4b817c2b99e40f0d5440f098"
}
cookies: [{'name': 'sessionid', 'value': 's7twe6efew0w3k5u4e46ct05aku8cvf8'}]
cost: 2417ms
cookie: <RequestsCookieJar[<Cookie sessionid=s7twe6efew0w3k5u4e46ct05aku8cvf8 for 124.70.221.221/>]>
2023-11-10 17:19:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1860003",
        "sql": ""
    }
}
2023-11-10 17:19:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=7b4nujoaxov6y342rdao3zwoxo6lb2rt; expires=Fri, 24-Nov-2023 09:19:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '7b4nujoaxov6y342rdao3zwoxo6lb2rt'}]
cost: 2141ms
cookie: <RequestsCookieJar[<Cookie sessionid=7b4nujoaxov6y342rdao3zwoxo6lb2rt for 124.70.221.221/>]>
2023-11-10 17:19:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:19:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1560004",
        "sql": ""
    }
}
2023-11-10 17:19:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:01 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=mqm5h6vxtolkmp93up92yd6zuojouxvv; expires=Fri, 24-Nov-2023 09:19:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "6827dd62223d9de958fb2933f9b0f8d0166f12e0"
}
cookies: [{'name': 'sessionid', 'value': 'mqm5h6vxtolkmp93up92yd6zuojouxvv'}]
cost: 2410ms
cookie: <RequestsCookieJar[<Cookie sessionid=mqm5h6vxtolkmp93up92yd6zuojouxvv for 124.70.221.221/>]>
2023-11-10 17:19:01 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:01 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:01 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:01 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:01 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:01 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:01 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:01 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1713128",
        "sql": ""
    }
}
2023-11-10 17:19:01 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:10 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=vtc3f2b8h796x7u0dyy2xh87ac5y512r; expires=Fri, 24-Nov-2023 09:19:10 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': 'vtc3f2b8h796x7u0dyy2xh87ac5y512r'}]
cost: 1953ms
cookie: <RequestsCookieJar[<Cookie sessionid=vtc3f2b8h796x7u0dyy2xh87ac5y512r for 124.70.221.221/>]>
2023-11-10 17:19:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:19:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1863233",
        "sql": ""
    }
}
2023-11-10 17:19:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=hpinp7j6haz9c348kngwxe1f578tm2ux; expires=Fri, 24-Nov-2023 09:19:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "a3aa859bbc44c540f1ca20868a074342e4f84333"
}
cookies: [{'name': 'sessionid', 'value': 'hpinp7j6haz9c348kngwxe1f578tm2ux'}]
cost: 2460ms
cookie: <RequestsCookieJar[<Cookie sessionid=hpinp7j6haz9c348kngwxe1f578tm2ux for 124.70.221.221/>]>
2023-11-10 17:19:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1778830",
        "sql": ""
    }
}
2023-11-10 17:19:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:02 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "76"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=05rm10cnv32reqe754uoym2v8f0ml1l9; expires=Fri, 24-Nov-2023 09:19:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 3003,
    "msg": "账号或密码不正确",
    "username": "test2",
    "token": ""
}
cookies: [{'name': 'sessionid', 'value': '05rm10cnv32reqe754uoym2v8f0ml1l9'}]
cost: 4084ms
cookie: <RequestsCookieJar[<Cookie sessionid=05rm10cnv32reqe754uoym2v8f0ml1l9 for 124.70.221.221/>]>
2023-11-10 17:19:02 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:02 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:02 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:02 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:02 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:02 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test1-123456]>>, 'username': 'test1', 'password': '123456'}
2023-11-10 17:19:02 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:02 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test1",
        "password": "123456",
        "code": "1760121",
        "sql": ""
    }
}
2023-11-10 17:19:02 [INFO]: f--------  执行前置条件 ----------
func1
2023-11-10 17:19:03 [INFO]: --------  response info ----------
status: True
msg: success
statusCode: 200
responseHeaders:
[
    {
        "name": "Date",
        "value": "Fri, 10 Nov 2023 09:19:11 GMT"
    },
    {
        "name": "Server",
        "value": "WSGIServer/0.2 CPython/3.6.8"
    },
    {
        "name": "Content-Type",
        "value": "application/json"
    },
    {
        "name": "Allow",
        "value": "POST, OPTIONS"
    },
    {
        "name": "X-Frame-Options",
        "value": "SAMEORIGIN"
    },
    {
        "name": "Content-Length",
        "value": "110"
    },
    {
        "name": "Vary",
        "value": "Cookie"
    },
    {
        "name": "Set-Cookie",
        "value": "sessionid=snwrrivtwf9a05qv7rzx1fkq64mo0j8y; expires=Fri, 24-Nov-2023 09:19:11 GMT; HttpOnly; Max-Age=1209600; Path=/"
    }
]
responseBody:
{
    "code": 0,
    "msg": "login success!",
    "username": "test1",
    "token": "c85f240fa57145200c9be94fc671aa9b896a7948"
}
cookies: [{'name': 'sessionid', 'value': 'snwrrivtwf9a05qv7rzx1fkq64mo0j8y'}]
cost: 3367ms
cookie: <RequestsCookieJar[<Cookie sessionid=snwrrivtwf9a05qv7rzx1fkq64mo0j8y for 124.70.221.221/>]>
2023-11-10 17:19:03 [INFO]: f--------  执行后置条件 ----------
func2
2023-11-10 17:19:03 [INFO]: 断言 -> [{'eq': ['$.msg', 'success']}]
2023-11-10 17:19:03 [INFO]: 执行文件-> testnull.yaml
2023-11-10 17:19:03 [INFO]: 参数化数据-> [{'username': 'test1', 'password': '123456'}, {'username': 'test2', 'password': 'abdxxx'}]
2023-11-10 17:19:03 [INFO]: 用例步骤：1 -> 登录1
2023-11-10 17:19:03 [INFO]: 当前用例引用参数化数据-> {'request': <FixtureRequest for <Function testnull[test2-abdxxx]>>, 'username': 'test2', 'password': 'abdxxx'}
2023-11-10 17:19:03 [ERROR]: MYSQL_HOST not found in config.py
2023-11-10 17:19:03 [INFO]: --------  request info ----------
{
    "url": "http://124.70.221.221:8201/api/v1/login/",
    "method": "POST",
    "headers": {
        "Content-Type": "application/json",
        "User-Agent": "python-requests/2.18.4"
    },
    "hooks": {
        "request_hooks": [
            "func1"
        ],
        "response_hooks": [
            "func2"
        ]
    },
    "json": {
        "username": "test2",
        "password": "abdxxx",
        "code": "1046910",
        "sql": ""
    }
}
2023-11-10 17:19:03 [INFO]: f--------  执行前置条件 ----------
func1
