# Generated by Django 4.2 on 2024-01-30 07:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Case",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Case Name"
                    ),
                ),
                (
                    "directory_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Case DirectoryId",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)],
                        default=0,
                        max_length=50,
                        verbose_name="Case Priority",
                    ),
                ),
                (
                    "rerun",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Case Name"
                    ),
                ),
                (
                    "threads",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Case Name"
                    ),
                ),
                (
                    "desc",
                    models.TextField(blank=True, null=True, verbose_name="Case Desc"),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Case CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="Case UpdateTime"),
                ),
            ],
            options={
                "verbose_name": "Case",
                "verbose_name_plural": "Case",
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminAccessIPWhitelist",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "whitelist_reason",
                    models.CharField(
                        blank=True,
                        help_text="Reason for the whitelist?",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="Enter username to whitelist",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "DjangoAdminAccessIPWhitelist",
                "verbose_name_plural": "DjangoAdminAccessIPWhitelist",
                "db_table": "django_admin_access_ip_whitelist",
                "permissions": (("can_whitelist_user", "Can Whitelist User"),),
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Project Name",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Web", "Web"),
                            ("App", "App"),
                            ("Pc", "Pc"),
                            ("MiniProgram", "MiniProgram"),
                        ],
                        default="Web",
                        max_length=50,
                        verbose_name="Project Type",
                    ),
                ),
                (
                    "private",
                    models.CharField(
                        choices=[(0, 0), (1, 1)],
                        default=0,
                        max_length=50,
                        verbose_name="Project private",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        default="avatar/default.png",
                        null=True,
                        upload_to="avatar/",
                        verbose_name="Project Avatar",
                    ),
                ),
                (
                    "desc",
                    models.TextField(
                        blank=True, null=True, verbose_name="Project Desc"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Project CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Project UpdateTime"
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Project",
                "ordering": ("-create_time",),
            },
        ),
        migrations.RemoveField(
            model_name="user",
            name="is_valid",
        ),
        migrations.AlterField(
            model_name="user",
            name="avatar",
            field=models.ImageField(
                blank=True,
                default="avatar/default.png",
                null=True,
                upload_to="avatar/",
                verbose_name="User Avatar",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="first_name",
            field=models.CharField(
                blank=True, max_length=150, verbose_name="first name"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name="verifycode",
            name="id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.CreateModel(
            name="TestEnvironment",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="TestEnvironment Name",
                    ),
                ),
                (
                    "desc",
                    models.TextField(
                        blank=True, null=True, verbose_name="TestEnvironment Desc"
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="TestEnvironment CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, verbose_name="TestEnvironment UpdateTime"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Test Environment",
                "verbose_name_plural": "Test Environment",
                "ordering": ("-create_time",),
            },
        ),
        migrations.CreateModel(
            name="Step",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "sort",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Step Sort"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Step Name"
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Step Method"
                    ),
                ),
                ("url", models.TextField(default=None, verbose_name="Step Url")),
                (
                    "desc",
                    models.TextField(blank=True, null=True, verbose_name="Step Desc"),
                ),
                (
                    "headers",
                    models.TextField(default=None, verbose_name="Step Headers"),
                ),
                ("params", models.TextField(default=None, verbose_name="Step Params")),
                ("raw", models.TextField(default=None, verbose_name="Step raw")),
                (
                    "setup_script",
                    models.TextField(default=None, verbose_name="Step SetupScript"),
                ),
                (
                    "teardown_script",
                    models.TextField(default=None, verbose_name="Step TeardownScript"),
                ),
                (
                    "validate",
                    models.TextField(default=None, verbose_name="Step Validate"),
                ),
                (
                    "extract",
                    models.TextField(default=None, verbose_name="Step Extract"),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Step CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="Step UpdateTime"),
                ),
                (
                    "case",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="step",
                        to="api.case",
                        verbose_name="Step Case",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="step_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Step",
                "verbose_name_plural": "Step",
            },
        ),
        migrations.CreateModel(
            name="Relation",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("tree", models.TextField(default=[], verbose_name="Relation Tree")),
                (
                    "type",
                    models.CharField(
                        choices=[(0, 0), (1, 1)],
                        default=0,
                        max_length=50,
                        verbose_name="Relation Type",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relation",
                "verbose_name_plural": "Relation",
            },
        ),
        migrations.CreateModel(
            name="ProjectRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "rode_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="ProjectRoleId",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="roles",
                        to="api.project",
                        verbose_name="Project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="project",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Plan Name"
                    ),
                ),
                ("cron", models.TextField(default=None, verbose_name="Plan Cron")),
                (
                    "priority",
                    models.CharField(
                        choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)],
                        default=0,
                        max_length=50,
                        verbose_name="Plan Priority",
                    ),
                ),
                (
                    "case_list",
                    models.TextField(default=None, verbose_name="Plan CaseList"),
                ),
                (
                    "state",
                    models.CharField(
                        choices=[(0, 0), (1, 1)],
                        default=0,
                        max_length=50,
                        verbose_name="Plan State",
                    ),
                ),
                (
                    "pass_rate",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Plan PassRate",
                    ),
                ),
                (
                    "msg_type",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Plan MsgType",
                    ),
                ),
                (
                    "receiver",
                    models.TextField(default=None, verbose_name="Plan Receiver"),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Plan CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="Plan UpdateTime"),
                ),
                (
                    "project",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="plan_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Step",
                "verbose_name_plural": "Step",
            },
        ),
        migrations.AddField(
            model_name="case",
            name="project",
            field=models.ForeignKey(
                db_constraint=False,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.project",
            ),
        ),
        migrations.AddField(
            model_name="case",
            name="user",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="case_creator",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.CreateModel(
            name="ApiCopy",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="ApiCopy Name",
                    ),
                ),
                (
                    "directory_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="ApiCopy DirectoryId",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="ApiCopy Method",
                    ),
                ),
                ("url", models.TextField(default=None, verbose_name="Api Url")),
                (
                    "priority",
                    models.CharField(
                        choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)],
                        default=0,
                        max_length=50,
                        verbose_name="ApiCopy Priority",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[(0, 0), (1, 1), (2, 2)],
                        default=0,
                        max_length=50,
                        verbose_name="ApiCopy Status",
                    ),
                ),
                (
                    "desc",
                    models.TextField(
                        blank=True, null=True, verbose_name="ApiCopy Desc"
                    ),
                ),
                (
                    "headers",
                    models.TextField(default=None, verbose_name="ApiCopy Headers"),
                ),
                (
                    "params",
                    models.TextField(default=None, verbose_name="ApiCopy Params"),
                ),
                ("raw", models.TextField(default=None, verbose_name="ApiCopy raw")),
                (
                    "setup_script",
                    models.TextField(default=None, verbose_name="ApiCopy SetupScript"),
                ),
                (
                    "teardown_script",
                    models.TextField(
                        default=None, verbose_name="ApiCopy TeardownScript"
                    ),
                ),
                (
                    "validate",
                    models.TextField(default=None, verbose_name="ApiCopy Validate"),
                ),
                (
                    "extract",
                    models.TextField(default=None, verbose_name="ApiCopy Extract"),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="ApiCopy CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, verbose_name="ApiCopy UpdateTime"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="apiCopy_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "ApiCopy",
                "verbose_name_plural": "ApiCopy",
            },
        ),
        migrations.CreateModel(
            name="Api",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Api Name"
                    ),
                ),
                (
                    "directory_id",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Api DirectoryId",
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Api Method"
                    ),
                ),
                ("url", models.TextField(default=None, verbose_name="Api Url")),
                (
                    "priority",
                    models.CharField(
                        choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4)],
                        default=0,
                        max_length=50,
                        verbose_name="Api Priority",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[(0, 0), (1, 1), (2, 2)],
                        default=0,
                        max_length=50,
                        verbose_name="Api Status",
                    ),
                ),
                (
                    "desc",
                    models.TextField(blank=True, null=True, verbose_name="Api Desc"),
                ),
                ("headers", models.TextField(default=None, verbose_name="Api Headers")),
                ("params", models.TextField(default=None, verbose_name="Api Params")),
                ("raw", models.TextField(default=None, verbose_name="Api raw")),
                (
                    "setup_script",
                    models.TextField(default=None, verbose_name="Api SetupScript"),
                ),
                (
                    "teardown_script",
                    models.TextField(default=None, verbose_name="Api TeardownScript"),
                ),
                (
                    "validate",
                    models.TextField(default=None, verbose_name="Api Validate"),
                ),
                ("extract", models.TextField(default=None, verbose_name="Api Extract")),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Api CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="Api UpdateTime"),
                ),
                (
                    "project",
                    models.ForeignKey(
                        db_constraint=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.project",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="api_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Api",
                "verbose_name_plural": "Api",
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Address Name",
                    ),
                ),
                (
                    "host",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Address Host",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Address CreateTime"
                    ),
                ),
                (
                    "update_time",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Address UpdateTime"
                    ),
                ),
                (
                    "env",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.testenvironment",
                        verbose_name="Address Env",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="address_creator",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Address",
                "ordering": ("-create_time",),
            },
        ),
    ]
